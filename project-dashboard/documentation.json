{
    "pipes": [],
    "interfaces": [
        {
            "name": "Company",
            "id": "interface-Company-cc76587513a4beb46c2bd0ed7beebf53bb938233ffa2cfb6776b5f96ad007e80bc94c06393e9780115f145d853c216686b90a3b6ce52d04fa8dd4edc95d419b6",
            "file": "src/app/modules/shared/interfaces/company.interface.ts",
            "deprecated": false,
            "deprecationMessage": "",
            "type": "interface",
            "sourceCode": "export interface Company {\r\n  id: string;\r\n  companyName: string;\r\n  address: string;\r\n  city: string;\r\n  state: string;\r\n  zip: string;\r\n}\r\n",
            "properties": [
                {
                    "name": "address",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "string",
                    "optional": false,
                    "description": "",
                    "line": 4
                },
                {
                    "name": "city",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "string",
                    "optional": false,
                    "description": "",
                    "line": 5
                },
                {
                    "name": "companyName",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "string",
                    "optional": false,
                    "description": "",
                    "line": 3
                },
                {
                    "name": "id",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "string",
                    "optional": false,
                    "description": "",
                    "line": 2
                },
                {
                    "name": "state",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "string",
                    "optional": false,
                    "description": "",
                    "line": 6
                },
                {
                    "name": "zip",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "string",
                    "optional": false,
                    "description": "",
                    "line": 7
                }
            ],
            "indexSignatures": [],
            "kind": 165,
            "methods": []
        },
        {
            "name": "Consultant",
            "id": "interface-Consultant-ec2dd03bd1ef760448fca4b1177e6cea9e68d0479823013287a8658f77dcf312db96ac31312b1b481a00a775965ec637390f5b35376a5e4db4e85f8bd84c20aa",
            "file": "src/app/modules/shared/interfaces/consultant.interface.ts",
            "deprecated": false,
            "deprecationMessage": "",
            "type": "interface",
            "sourceCode": "export interface Consultant {\r\n  id: string;\r\n  firstName: string;\r\n  lastName: string;\r\n  email: string;\r\n  workPhone: string;\r\n  profilePhoto: string;\r\n  roleId: string;\r\n  projectId: string;\r\n}\r\n",
            "properties": [
                {
                    "name": "email",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "string",
                    "optional": false,
                    "description": "",
                    "line": 5
                },
                {
                    "name": "firstName",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "string",
                    "optional": false,
                    "description": "",
                    "line": 3
                },
                {
                    "name": "id",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "string",
                    "optional": false,
                    "description": "",
                    "line": 2
                },
                {
                    "name": "lastName",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "string",
                    "optional": false,
                    "description": "",
                    "line": 4
                },
                {
                    "name": "profilePhoto",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "string",
                    "optional": false,
                    "description": "",
                    "line": 7
                },
                {
                    "name": "projectId",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "string",
                    "optional": false,
                    "description": "",
                    "line": 9
                },
                {
                    "name": "roleId",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "string",
                    "optional": false,
                    "description": "",
                    "line": 8
                },
                {
                    "name": "workPhone",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "string",
                    "optional": false,
                    "description": "",
                    "line": 6
                }
            ],
            "indexSignatures": [],
            "kind": 165,
            "methods": []
        },
        {
            "name": "Contact",
            "id": "interface-Contact-c7be1fd36533cef7774150c049a8e8f86cd4a32cde2d5209b7dcead2ba9123bd42da3cb052840bdc94df527657f321714529974386d19a26f58b7620a73ebb39",
            "file": "src/app/modules/shared/interfaces/contact.interface.ts",
            "deprecated": false,
            "deprecationMessage": "",
            "type": "interface",
            "sourceCode": "export interface Contact {\r\n  id: string;\r\n  firstName: string;\r\n  lastName: string;\r\n  jobTitle: string;\r\n  workPhone: string;\r\n  email: string;\r\n  companyId: string;\r\n}\r\n",
            "properties": [
                {
                    "name": "companyId",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "string",
                    "optional": false,
                    "description": "",
                    "line": 8
                },
                {
                    "name": "email",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "string",
                    "optional": false,
                    "description": "",
                    "line": 7
                },
                {
                    "name": "firstName",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "string",
                    "optional": false,
                    "description": "",
                    "line": 3
                },
                {
                    "name": "id",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "string",
                    "optional": false,
                    "description": "",
                    "line": 2
                },
                {
                    "name": "jobTitle",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "string",
                    "optional": false,
                    "description": "",
                    "line": 5
                },
                {
                    "name": "lastName",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "string",
                    "optional": false,
                    "description": "",
                    "line": 4
                },
                {
                    "name": "workPhone",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "string",
                    "optional": false,
                    "description": "",
                    "line": 6
                }
            ],
            "indexSignatures": [],
            "kind": 165,
            "methods": []
        },
        {
            "name": "Dropdown",
            "id": "interface-Dropdown-265a4d5602f41781affddb7931e2860deaceab9b2be4b2732717ca259b5dbbfb46cb17d67e9dc36cd860944c2a788dec7fe31080b365d4edb2c9eda291c84066",
            "file": "src/app/modules/shared/interfaces/ui.interface.ts",
            "deprecated": false,
            "deprecationMessage": "",
            "type": "interface",
            "sourceCode": "export interface Dropdown {\r\n  value: any;\r\n  display: any;\r\n  metaData?: any;\r\n}\r\n\r\nexport interface NavLinkObj {\r\n  to: string;\r\n  text: string;\r\n}\r\n",
            "properties": [
                {
                    "name": "display",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "any",
                    "optional": false,
                    "description": "",
                    "line": 3
                },
                {
                    "name": "metaData",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "any",
                    "optional": true,
                    "description": "",
                    "line": 4
                },
                {
                    "name": "value",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "any",
                    "optional": false,
                    "description": "",
                    "line": 2
                }
            ],
            "indexSignatures": [],
            "kind": 165,
            "methods": []
        },
        {
            "name": "NavLinkObj",
            "id": "interface-NavLinkObj-265a4d5602f41781affddb7931e2860deaceab9b2be4b2732717ca259b5dbbfb46cb17d67e9dc36cd860944c2a788dec7fe31080b365d4edb2c9eda291c84066",
            "file": "src/app/modules/shared/interfaces/ui.interface.ts",
            "deprecated": false,
            "deprecationMessage": "",
            "type": "interface",
            "sourceCode": "export interface Dropdown {\r\n  value: any;\r\n  display: any;\r\n  metaData?: any;\r\n}\r\n\r\nexport interface NavLinkObj {\r\n  to: string;\r\n  text: string;\r\n}\r\n",
            "properties": [
                {
                    "name": "text",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "string",
                    "optional": false,
                    "description": "",
                    "line": 9
                },
                {
                    "name": "to",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "string",
                    "optional": false,
                    "description": "",
                    "line": 8
                }
            ],
            "indexSignatures": [],
            "kind": 165,
            "methods": []
        },
        {
            "name": "Project",
            "id": "interface-Project-32b57b2a1605e1612341e2ac21c01ec9e0c370e1233cccb77dd57b31f9dba51e84aeb3f2b07dba4cf49298fb83748f1958064f9053951cff9d05ec2b88d5efe3",
            "file": "src/app/modules/shared/interfaces/project.interface.ts",
            "deprecated": false,
            "deprecationMessage": "",
            "type": "interface",
            "sourceCode": "export interface Project {\r\n  id: string;\r\n  projectCodeName: string;\r\n  overallStatus: string;\r\n  startDate: string;\r\n  modifiedDate: string;\r\n  percentageComplete: string;\r\n  projectedEndDate: string;\r\n  companyId: string;\r\n}\r\n",
            "properties": [
                {
                    "name": "companyId",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "string",
                    "optional": false,
                    "description": "",
                    "line": 9
                },
                {
                    "name": "id",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "string",
                    "optional": false,
                    "description": "",
                    "line": 2
                },
                {
                    "name": "modifiedDate",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "string",
                    "optional": false,
                    "description": "",
                    "line": 6
                },
                {
                    "name": "overallStatus",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "string",
                    "optional": false,
                    "description": "",
                    "line": 4
                },
                {
                    "name": "percentageComplete",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "string",
                    "optional": false,
                    "description": "",
                    "line": 7
                },
                {
                    "name": "projectCodeName",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "string",
                    "optional": false,
                    "description": "",
                    "line": 3
                },
                {
                    "name": "projectedEndDate",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "string",
                    "optional": false,
                    "description": "",
                    "line": 8
                },
                {
                    "name": "startDate",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "string",
                    "optional": false,
                    "description": "",
                    "line": 5
                }
            ],
            "indexSignatures": [],
            "kind": 165,
            "methods": []
        },
        {
            "name": "ProjectState",
            "id": "interface-ProjectState-0c1f3768e348e6768f3550d3cb3393acd34579290ef7b6d9b71184c5321ce656462fb956ddf505caaa461e09db550f76c04cbc4e98d959af808fd52e863d41cf",
            "file": "src/app/modules/features/project/state/project.reducer.ts",
            "deprecated": false,
            "deprecationMessage": "",
            "type": "interface",
            "sourceCode": "import { createReducer, on } from '@ngrx/store';\r\nimport { Project } from 'src/app/modules/shared/interfaces/project.interface';\r\nimport * as AppState from 'src/app/state/app.state';\r\nimport { ProjectApiActions, ProjectPageActions } from './actions';\r\n\r\nexport const ProjectFeatureKey = 'projects';\r\n\r\nexport interface State extends AppState.State {\r\n  projects: ProjectState;\r\n}\r\n\r\nexport interface ProjectState {\r\n  projects: Project[];\r\n  isLoading: boolean;\r\n  error: string;\r\n}\r\n\r\nconst initialState: ProjectState = {\r\n  projects: [],\r\n  isLoading: true,\r\n  error: '',\r\n};\r\n\r\nexport const projectReducer = createReducer(\r\n  initialState,\r\n  on(ProjectApiActions.loadProjectsSuccess, (state, action): ProjectState => {\r\n    return {\r\n      ...state,\r\n      projects: action.projects,\r\n      error: '',\r\n      isLoading: false,\r\n    };\r\n  }),\r\n  on(ProjectApiActions.loadProjectError, (state, action): ProjectState => {\r\n    return {\r\n      ...state,\r\n      projects: [],\r\n      isLoading: false,\r\n      error: action.error,\r\n    };\r\n  })\r\n);\r\n",
            "properties": [
                {
                    "name": "error",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "string",
                    "optional": false,
                    "description": "",
                    "line": 15
                },
                {
                    "name": "isLoading",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "boolean",
                    "optional": false,
                    "description": "",
                    "line": 14
                },
                {
                    "name": "projects",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "Project[]",
                    "optional": false,
                    "description": "",
                    "line": 13
                }
            ],
            "indexSignatures": [],
            "kind": 165,
            "methods": []
        },
        {
            "name": "Role",
            "id": "interface-Role-77097012ee5ffac3cecad99f4fdb1125f6045d6217c5438b9e605f5bdb9a4395d00bd444f28b407b963b06a238477970695069c8c6afa84c1e6f9301cefd8495",
            "file": "src/app/modules/shared/interfaces/role.interface.ts",
            "deprecated": false,
            "deprecationMessage": "",
            "type": "interface",
            "sourceCode": "export interface Role {\r\n  id: string;\r\n  roleName: string;\r\n}\r\n",
            "properties": [
                {
                    "name": "id",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "string",
                    "optional": false,
                    "description": "",
                    "line": 2
                },
                {
                    "name": "roleName",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "string",
                    "optional": false,
                    "description": "",
                    "line": 3
                }
            ],
            "indexSignatures": [],
            "kind": 165,
            "methods": []
        },
        {
            "name": "State",
            "id": "interface-State-82ebf25a016ff3f1ae4c39530c703458d0e8d8a40238f97788c8b4904eec63e97d2b2e267b0fa0eb41e6259a26876d6742d363ff24e72ec36333853b5726060a",
            "file": "src/app/state/app.state.ts",
            "deprecated": false,
            "deprecationMessage": "",
            "type": "interface",
            "sourceCode": "export interface State {\r\n  pageTitle: string;\r\n}\r\n",
            "properties": [
                {
                    "name": "pageTitle",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "string",
                    "optional": false,
                    "description": "",
                    "line": 2
                }
            ],
            "indexSignatures": [],
            "kind": 165,
            "methods": []
        },
        {
            "name": "State",
            "id": "interface-State-0c1f3768e348e6768f3550d3cb3393acd34579290ef7b6d9b71184c5321ce656462fb956ddf505caaa461e09db550f76c04cbc4e98d959af808fd52e863d41cf-1",
            "file": "src/app/modules/features/project/state/project.reducer.ts",
            "deprecated": false,
            "deprecationMessage": "",
            "type": "interface",
            "sourceCode": "import { createReducer, on } from '@ngrx/store';\r\nimport { Project } from 'src/app/modules/shared/interfaces/project.interface';\r\nimport * as AppState from 'src/app/state/app.state';\r\nimport { ProjectApiActions, ProjectPageActions } from './actions';\r\n\r\nexport const ProjectFeatureKey = 'projects';\r\n\r\nexport interface State extends AppState.State {\r\n  projects: ProjectState;\r\n}\r\n\r\nexport interface ProjectState {\r\n  projects: Project[];\r\n  isLoading: boolean;\r\n  error: string;\r\n}\r\n\r\nconst initialState: ProjectState = {\r\n  projects: [],\r\n  isLoading: true,\r\n  error: '',\r\n};\r\n\r\nexport const projectReducer = createReducer(\r\n  initialState,\r\n  on(ProjectApiActions.loadProjectsSuccess, (state, action): ProjectState => {\r\n    return {\r\n      ...state,\r\n      projects: action.projects,\r\n      error: '',\r\n      isLoading: false,\r\n    };\r\n  }),\r\n  on(ProjectApiActions.loadProjectError, (state, action): ProjectState => {\r\n    return {\r\n      ...state,\r\n      projects: [],\r\n      isLoading: false,\r\n      error: action.error,\r\n    };\r\n  })\r\n);\r\n",
            "properties": [
                {
                    "name": "projects",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "ProjectState",
                    "optional": false,
                    "description": "",
                    "line": 9
                }
            ],
            "indexSignatures": [],
            "kind": 165,
            "methods": [],
            "isDuplicate": true,
            "duplicateId": 1,
            "duplicateName": "State-1"
        }
    ],
    "injectables": [
        {
            "name": "ProjectEffects",
            "id": "injectable-ProjectEffects-7cef1fa2fd514d5b86041eaad25e57a09f9a55c2a6e274e44fe6e2ab5e1dd3a197e7d890ffd33a3cbbedba4a8844b79dd3333c6f980c9410d07ae47152af813d",
            "file": "src/app/modules/features/project/state/project.effects.ts",
            "properties": [
                {
                    "name": "loadProjects$",
                    "defaultValue": "createEffect(() => {\r\n    return this.actions$.pipe(\r\n      ofType(ProjectPageActions.loadProjects),\r\n      exhaustMap(() =>\r\n        this.projectService\r\n          .getProjects()\r\n          .pipe(\r\n            map((projects) =>\r\n              ProjectApiActions.loadProjectsSuccess({ projects })\r\n            )\r\n          )\r\n      )\r\n    );\r\n  })",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "optional": false,
                    "description": "",
                    "line": 14
                }
            ],
            "methods": [],
            "deprecated": false,
            "deprecationMessage": "",
            "description": "",
            "rawdescription": "\n",
            "sourceCode": "import { Injectable } from '@angular/core';\r\nimport { ProjectService } from '@modules/core/services/project.service';\r\nimport { Actions, createEffect, ofType } from '@ngrx/effects';\r\nimport { exhaustMap, map } from 'rxjs';\r\nimport { ProjectApiActions, ProjectPageActions } from './actions';\r\n\r\n@Injectable()\r\nexport class ProjectEffects {\r\n  constructor(\r\n    private actions$: Actions,\r\n    private projectService: ProjectService\r\n  ) {}\r\n\r\n  loadProjects$ = createEffect(() => {\r\n    return this.actions$.pipe(\r\n      ofType(ProjectPageActions.loadProjects),\r\n      exhaustMap(() =>\r\n        this.projectService\r\n          .getProjects()\r\n          .pipe(\r\n            map((projects) =>\r\n              ProjectApiActions.loadProjectsSuccess({ projects })\r\n            )\r\n          )\r\n      )\r\n    );\r\n  });\r\n}\r\n",
            "constructorObj": {
                "name": "constructor",
                "description": "",
                "deprecated": false,
                "deprecationMessage": "",
                "args": [
                    {
                        "name": "actions$",
                        "type": "Actions",
                        "deprecated": false,
                        "deprecationMessage": ""
                    },
                    {
                        "name": "projectService",
                        "type": "ProjectService",
                        "deprecated": false,
                        "deprecationMessage": ""
                    }
                ],
                "line": 8,
                "jsdoctags": [
                    {
                        "name": "actions$",
                        "type": "Actions",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "tagName": {
                            "text": "param"
                        }
                    },
                    {
                        "name": "projectService",
                        "type": "ProjectService",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "tagName": {
                            "text": "param"
                        }
                    }
                ]
            },
            "type": "injectable"
        },
        {
            "name": "ProjectService",
            "id": "injectable-ProjectService-4bd0371aa979d43b3dffbbd07039265eec336b98a393e5fd0a1e8ef09e1142975a71eeecedf73065bcdebf8d3a29a8e898bffe856b5f0b9fc3dd6f3c082956b8",
            "file": "src/app/modules/core/services/project.service.ts",
            "properties": [
                {
                    "name": "projectUrl",
                    "defaultValue": "'http://localhost:3000/projects'",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "string",
                    "optional": false,
                    "description": "",
                    "line": 11,
                    "modifierKind": [
                        121
                    ]
                }
            ],
            "methods": [
                {
                    "name": "getProjects",
                    "args": [],
                    "optional": false,
                    "returnType": "any",
                    "typeParameters": [],
                    "line": 15,
                    "deprecated": false,
                    "deprecationMessage": ""
                },
                {
                    "name": "handleError",
                    "args": [
                        {
                            "name": "err",
                            "type": "HttpErrorResponse",
                            "deprecated": false,
                            "deprecationMessage": ""
                        }
                    ],
                    "optional": false,
                    "returnType": "Observable<never>",
                    "typeParameters": [],
                    "line": 30,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "jsdoctags": [
                        {
                            "name": "err",
                            "type": "HttpErrorResponse",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                }
            ],
            "deprecated": false,
            "deprecationMessage": "",
            "description": "",
            "rawdescription": "\n",
            "sourceCode": "import { HttpClient, HttpErrorResponse } from '@angular/common/http';\nimport { Injectable } from '@angular/core';\nimport { catchError, delay, map, Observable, throwError } from 'rxjs';\nimport { Project } from '../../shared/interfaces/project.interface';\nimport { DateUtility } from '../utilities/date.util';\n\n@Injectable({\n  providedIn: 'root',\n})\nexport class ProjectService {\n  private projectUrl = 'http://localhost:3000/projects';\n\n  constructor(private http: HttpClient) {}\n\n  getProjects() {\n    return this.http.get<Project[]>(this.projectUrl).pipe(\n      delay(750),\n      map((projects) => {\n        projects.forEach((item) => {\n          item.startDate = DateUtility.getDate(item.modifiedDate);\n          item.modifiedDate = DateUtility.getDate(item.modifiedDate);\n          item.projectedEndDate = DateUtility.getDate(item.projectedEndDate);\n        });\n        return projects;\n      }),\n      catchError(this.handleError)\n    );\n  }\n\n  handleError(err: HttpErrorResponse): Observable<never> {\n    let errorMessage: string;\n    if (err.error instanceof ErrorEvent) {\n      errorMessage = `An error occurred: ${err.error.message}`;\n    } else {\n      errorMessage = `Backend returned code ${err.status}: ${err.message}`;\n    }\n    console.error(err);\n    return throwError(() => errorMessage);\n  }\n}\n",
            "constructorObj": {
                "name": "constructor",
                "description": "",
                "deprecated": false,
                "deprecationMessage": "",
                "args": [
                    {
                        "name": "http",
                        "type": "HttpClient",
                        "deprecated": false,
                        "deprecationMessage": ""
                    }
                ],
                "line": 11,
                "jsdoctags": [
                    {
                        "name": "http",
                        "type": "HttpClient",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "tagName": {
                            "text": "param"
                        }
                    }
                ]
            },
            "type": "injectable"
        }
    ],
    "guards": [],
    "interceptors": [],
    "classes": [
        {
            "name": "DateUtility",
            "id": "class-DateUtility-a6335ff8022649e1bd58356c9be0e1de69908eb2cdbccb62d5f6b68e6b51d6aff9c49f3e2cf79bb9200beb9ceb3ef7dbb94272da0a0d535c89b9800467d3d9cd",
            "file": "src/app/modules/core/utilities/date.util.ts",
            "deprecated": false,
            "deprecationMessage": "",
            "type": "class",
            "sourceCode": "import * as moment from 'moment';\r\n\r\nexport class DateUtility {\r\n  public static getDate(str: string): string {\r\n    return moment(str).format('M.D.YYYY');\r\n  }\r\n}\r\n",
            "properties": [],
            "methods": [
                {
                    "name": "getDate",
                    "args": [
                        {
                            "name": "str",
                            "type": "string",
                            "deprecated": false,
                            "deprecationMessage": ""
                        }
                    ],
                    "optional": false,
                    "returnType": "string",
                    "typeParameters": [],
                    "line": 4,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "modifierKind": [
                        124
                    ],
                    "jsdoctags": [
                        {
                            "name": "str",
                            "type": "string",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                }
            ],
            "indexSignatures": [],
            "inputsClass": [],
            "outputsClass": [],
            "hostBindings": [],
            "hostListeners": []
        }
    ],
    "directives": [],
    "components": [
        {
            "name": "AppComponent",
            "id": "component-AppComponent-8bc0db5aec380b783889c093b61144d9f7c67deb32da03d52a11d1554a3dee87666b337d6596a7ad7d9a2523de44808873b5ab09bf999a2d7d65d92b42440747",
            "file": "src/app/app.component.ts",
            "encapsulation": [],
            "entryComponents": [],
            "inputs": [],
            "outputs": [],
            "providers": [],
            "selector": "jrs-root",
            "styleUrls": [
                "./app.component.scss"
            ],
            "styles": [],
            "templateUrl": [
                "./app.component.html"
            ],
            "viewProviders": [],
            "inputsClass": [],
            "outputsClass": [],
            "propertiesClass": [
                {
                    "name": "navLinks",
                    "defaultValue": "[\n    {\n      to: '/projects',\n      text: 'PROJECTS',\n    },\n    {\n      to: '/projects',\n      text: 'COMPANIES',\n    },\n    {\n      to: '/projects',\n      text: 'CONSULTANTS',\n    },\n  ]",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "NavLinkObj[]",
                    "optional": false,
                    "description": "",
                    "line": 17
                },
                {
                    "name": "pageTitle$",
                    "defaultValue": "this.store.select(pipe(selectPageTitle))",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "optional": false,
                    "description": "",
                    "line": 15
                }
            ],
            "methodsClass": [
                {
                    "name": "handleLinkClickEvent",
                    "args": [
                        {
                            "name": "linkName",
                            "type": "any",
                            "deprecated": false,
                            "deprecationMessage": ""
                        }
                    ],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 34,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "jsdoctags": [
                        {
                            "name": "linkName",
                            "type": "any",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                },
                {
                    "name": "handleLogoClickEvent",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 38,
                    "deprecated": false,
                    "deprecationMessage": ""
                }
            ],
            "deprecated": false,
            "deprecationMessage": "",
            "hostBindings": [],
            "hostListeners": [],
            "description": "",
            "rawdescription": "\n",
            "type": "component",
            "sourceCode": "import { Component } from '@angular/core';\nimport { Router } from '@angular/router';\nimport { Store } from '@ngrx/store';\nimport { pipe } from 'rxjs';\nimport { NavLinkObj } from '@modules/shared/interfaces/ui.interface';\nimport { setPageTitle } from './state/app.actions';\nimport { selectPageTitle } from './state/app.selectors';\nimport { State } from './state/app.state';\n@Component({\n  selector: 'jrs-root',\n  templateUrl: './app.component.html',\n  styleUrls: ['./app.component.scss'],\n})\nexport class AppComponent {\n  pageTitle$ = this.store.select(pipe(selectPageTitle));\n\n  navLinks: NavLinkObj[] = [\n    {\n      to: '/projects',\n      text: 'PROJECTS',\n    },\n    {\n      to: '/projects',\n      text: 'COMPANIES',\n    },\n    {\n      to: '/projects',\n      text: 'CONSULTANTS',\n    },\n  ];\n\n  constructor(private router: Router, private store: Store<State>) {}\n\n  handleLinkClickEvent(linkName: any) {\n    this.store.dispatch(setPageTitle({ pageTitle: linkName }));\n  }\n\n  handleLogoClickEvent() {\n    this.router.navigate(['/']);\n    this.store.dispatch(setPageTitle({ pageTitle: 'WELCOME' }));\n  }\n}\n",
            "assetsDirs": [],
            "styleUrlsData": [
                {
                    "data": "",
                    "styleUrl": "./app.component.scss"
                }
            ],
            "stylesData": "",
            "constructorObj": {
                "name": "constructor",
                "description": "",
                "deprecated": false,
                "deprecationMessage": "",
                "args": [
                    {
                        "name": "router",
                        "type": "Router",
                        "deprecated": false,
                        "deprecationMessage": ""
                    },
                    {
                        "name": "store",
                        "type": "Store<State>",
                        "deprecated": false,
                        "deprecationMessage": ""
                    }
                ],
                "line": 30,
                "jsdoctags": [
                    {
                        "name": "router",
                        "type": "Router",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "tagName": {
                            "text": "param"
                        }
                    },
                    {
                        "name": "store",
                        "type": "Store<State>",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "tagName": {
                            "text": "param"
                        }
                    }
                ]
            },
            "templateData": "<ng-container *ngIf=\"pageTitle$ | async as pageTitle; else loading\">\n  <jrs-header\n    [navLinks]=\"navLinks\"\n    [headerTitle]=\"pageTitle\"\n    (logoClickEvent)=\"handleLogoClickEvent()\"\n    (linkClickEvent)=\"handleLinkClickEvent($event)\"\n  ></jrs-header>\n</ng-container>\n<ng-template #loading>\n  <div id=\"loading\">Loading</div>\n</ng-template>\n\n<router-outlet></router-outlet>\n"
        },
        {
            "name": "ButtonComponent",
            "id": "component-ButtonComponent-c2158891f8c0ba34f0986ce1f2746b73a278bd73cd783633edfdce812f47c13b8175968b27455e6238ce7b332d43201251c78d05236b0a79d9862a023672df68",
            "file": "src/app/modules/shared/components/atoms/button/button.component.ts",
            "encapsulation": [],
            "entryComponents": [],
            "inputs": [],
            "outputs": [],
            "providers": [],
            "selector": "jrs-button",
            "styleUrls": [
                "./button.component.scss"
            ],
            "styles": [],
            "templateUrl": [
                "./button.component.html"
            ],
            "viewProviders": [],
            "inputsClass": [
                {
                    "name": "label",
                    "defaultValue": "''",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 10,
                    "type": "string",
                    "decorators": []
                },
                {
                    "name": "size",
                    "defaultValue": "'m'",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 14,
                    "type": "UiSize",
                    "decorators": []
                },
                {
                    "name": "type",
                    "defaultValue": "'primary'",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 12,
                    "type": "\"primary\" | \"secondary\"",
                    "decorators": []
                }
            ],
            "outputsClass": [
                {
                    "name": "clickOutputEvent",
                    "defaultValue": "new EventEmitter()",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 16,
                    "type": "EventEmitter<Event>"
                }
            ],
            "propertiesClass": [],
            "methodsClass": [
                {
                    "name": "handleButtonClickEvent",
                    "args": [
                        {
                            "name": "event",
                            "type": "Event",
                            "deprecated": false,
                            "deprecationMessage": ""
                        }
                    ],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 18,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "jsdoctags": [
                        {
                            "name": "event",
                            "type": "Event",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                }
            ],
            "deprecated": false,
            "deprecationMessage": "",
            "hostBindings": [],
            "hostListeners": [],
            "description": "",
            "rawdescription": "\n",
            "type": "component",
            "sourceCode": "import { Component, EventEmitter, Input, Output } from '@angular/core';\nimport { UiSize } from '../../../types/ui.types';\n\n@Component({\n  selector: 'jrs-button',\n  templateUrl: './button.component.html',\n  styleUrls: ['./button.component.scss'],\n})\nexport class ButtonComponent {\n  @Input() label = '';\n\n  @Input() type: 'primary' | 'secondary' = 'primary';\n\n  @Input() size: UiSize = 'm';\n\n  @Output() clickOutputEvent: EventEmitter<Event> = new EventEmitter();\n\n  handleButtonClickEvent(event: Event): void {\n    this.clickOutputEvent.emit(event);\n  }\n}\n",
            "assetsDirs": [],
            "styleUrlsData": [
                {
                    "data": ".atom--button {\r\n  box-sizing: border-box !important;\r\n  padding: 8px 24px;\r\n  &.primary {\r\n    background-color: var(--primary-color);\r\n    color: var(--white);\r\n    &:hover,\r\n    &:focus {\r\n      outline: 2px solid var(--primary-color);\r\n      outline-offset: 4px;\r\n    }\r\n  }\r\n  &.secondary {\r\n    background-color: var(--white);\r\n    color: var(--secondary-color);\r\n    outline: 2px solid var(--secondary-color);\r\n    padding: 6px 22px;\r\n    margin-top: 2px;\r\n    margin-left: 2px;\r\n    &:hover,\r\n    &:focus {\r\n      outline: 2px solid var(--secondary-color);\r\n      outline-offset: 4px;\r\n    }\r\n  }\r\n}\r\n",
                    "styleUrl": "./button.component.scss"
                }
            ],
            "stylesData": "",
            "templateData": "<button\r\n  class=\"atom--button rounded-md uppercase font-semibold box-border\"\r\n  (click)=\"handleButtonClickEvent($event)\"\r\n  [ngClass]=\"[size, type]\"\r\n>\r\n  {{ label }}\r\n</button>\r\n"
        },
        {
            "name": "DropdownInputComponent",
            "id": "component-DropdownInputComponent-c2f545d34c337cb9253818e98242c1b43a72c09be09ff4587291e63a2437a745f9ee3a1af137a91ff128e9003704fa647decae4aef3abfabad73c054a495aa59",
            "file": "src/app/modules/shared/components/atoms/dropdown-input/dropdown-input.component.ts",
            "encapsulation": [],
            "entryComponents": [],
            "inputs": [],
            "outputs": [],
            "providers": [],
            "selector": "jrs-dropdown-input",
            "styleUrls": [
                "./dropdown-input.component.scss"
            ],
            "styles": [],
            "templateUrl": [
                "./dropdown-input.component.html"
            ],
            "viewProviders": [],
            "inputsClass": [
                {
                    "name": "accessibilityLabelName",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 26,
                    "type": "string",
                    "decorators": []
                },
                {
                    "name": "inputId",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 11,
                    "type": "string",
                    "decorators": []
                },
                {
                    "name": "isRequired",
                    "defaultValue": "false",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 24,
                    "type": "boolean",
                    "decorators": []
                },
                {
                    "name": "options",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 18,
                    "type": "Dropdown[]",
                    "decorators": []
                },
                {
                    "name": "placeholder",
                    "defaultValue": "'Choose option...'",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 20,
                    "type": "string",
                    "decorators": []
                },
                {
                    "name": "selectedValue",
                    "defaultValue": "{\n    value: '0',\n    display: 'Choose option...',\n  }",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 13,
                    "type": "Dropdown",
                    "decorators": []
                },
                {
                    "name": "size",
                    "defaultValue": "'m'",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 22,
                    "type": "UiSize",
                    "decorators": []
                }
            ],
            "outputsClass": [
                {
                    "name": "changeOutputEvent",
                    "defaultValue": "new EventEmitter()",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 28,
                    "type": "EventEmitter<any>"
                }
            ],
            "propertiesClass": [],
            "methodsClass": [
                {
                    "name": "handleChangeOutputEvent",
                    "args": [
                        {
                            "name": "event",
                            "type": "any",
                            "deprecated": false,
                            "deprecationMessage": ""
                        }
                    ],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 30,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "jsdoctags": [
                        {
                            "name": "event",
                            "type": "any",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                }
            ],
            "deprecated": false,
            "deprecationMessage": "",
            "hostBindings": [],
            "hostListeners": [],
            "description": "",
            "rawdescription": "\n",
            "type": "component",
            "sourceCode": "import { Component, Input, Output, EventEmitter } from '@angular/core';\nimport { Dropdown } from '../../../interfaces/ui.interface';\nimport { UiSize } from '../../../types/ui.types';\n\n@Component({\n  selector: 'jrs-dropdown-input',\n  templateUrl: './dropdown-input.component.html',\n  styleUrls: ['./dropdown-input.component.scss'],\n})\nexport class DropdownInputComponent {\n  @Input() inputId: string;\n\n  @Input() selectedValue: Dropdown = {\n    value: '0',\n    display: 'Choose option...',\n  };\n\n  @Input() options: Dropdown[];\n\n  @Input() placeholder = 'Choose option...';\n\n  @Input() size: UiSize = 'm';\n\n  @Input() isRequired = false;\n\n  @Input() accessibilityLabelName: string;\n\n  @Output() changeOutputEvent: EventEmitter<any> = new EventEmitter();\n\n  handleChangeOutputEvent(event: any) {\n    this.changeOutputEvent.emit(event);\n  }\n}\n",
            "assetsDirs": [],
            "styleUrlsData": [
                {
                    "data": "",
                    "styleUrl": "./dropdown-input.component.scss"
                }
            ],
            "stylesData": "",
            "templateData": "<select\n  class=\"\n    py-2\n    px-3\n    border border-darker-grey-color\n    rounded-md\n    outline-2 outline-secondary-color\n    dropdown-select\n  \"\n  (change)=\"handleChangeOutputEvent(selectedValue.value)\"\n  [attr.aria-label]=\"accessibilityLabelName\"\n  [(ngModel)]=\"selectedValue.value\"\n  [attr.id]=\"inputId\"\n  [ngClass]=\"size\"\n  [attr.required]=\"isRequired\"\n>\n  <option *ngIf=\"placeholder !== ''\" value=\"0\">{{ placeholder }}</option>\n  <option\n    *ngFor=\"let option of options\"\n    [selected]=\"option.value\"\n    [ngValue]=\"option.value\"\n  >\n    {{ option.display }}\n  </option>\n</select>\n"
        },
        {
            "name": "GridComponent",
            "id": "component-GridComponent-5f3404a10a270da7bb50e53f440dcc468a97ab39f9e2ed935bfb2526cd8823e0ffdd83d81916bd2ae9f8803e5dcd736d2a27b9d90e829824546244d572e5e0d2",
            "file": "src/app/modules/shared/components/atoms/grid/grid.component.ts",
            "encapsulation": [],
            "entryComponents": [],
            "inputs": [],
            "outputs": [],
            "providers": [],
            "selector": "jrs-grid",
            "styleUrls": [
                "./grid.component.scss"
            ],
            "styles": [],
            "templateUrl": [
                "./grid.component.html"
            ],
            "viewProviders": [],
            "inputsClass": [
                {
                    "name": "columnDefs",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 11,
                    "type": "ColDef[]",
                    "decorators": []
                },
                {
                    "name": "data",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 18,
                    "type": "any[]",
                    "decorators": []
                },
                {
                    "name": "defaultColDef",
                    "defaultValue": "{\n    sortable: true,\n    filter: true,\n    flex: 1,\n    minWidth: 100,\n  }",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 12,
                    "type": "ColDef",
                    "decorators": []
                },
                {
                    "name": "height",
                    "defaultValue": "'m'",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 19,
                    "type": "UiSize",
                    "decorators": []
                }
            ],
            "outputsClass": [],
            "propertiesClass": [
                {
                    "name": "gridApi",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "GridApi",
                    "optional": false,
                    "description": "",
                    "line": 21,
                    "modifierKind": [
                        121
                    ]
                },
                {
                    "name": "gridColumnApi",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "ColumnApi",
                    "optional": false,
                    "description": "",
                    "line": 22,
                    "modifierKind": [
                        121
                    ]
                },
                {
                    "name": "rowData",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "any[]",
                    "optional": false,
                    "description": "",
                    "line": 24
                }
            ],
            "methodsClass": [
                {
                    "name": "onGridReady",
                    "args": [
                        {
                            "name": "params",
                            "type": "GridReadyEvent",
                            "deprecated": false,
                            "deprecationMessage": ""
                        }
                    ],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 26,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "jsdoctags": [
                        {
                            "name": "params",
                            "type": "GridReadyEvent",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                }
            ],
            "deprecated": false,
            "deprecationMessage": "",
            "hostBindings": [],
            "hostListeners": [],
            "description": "",
            "rawdescription": "\n",
            "type": "component",
            "sourceCode": "import { Component, Input } from '@angular/core';\nimport { UiSize } from '@modules/shared/types/ui.types';\nimport { ColDef, ColumnApi, GridApi, GridReadyEvent } from 'ag-grid-community';\n\n@Component({\n  selector: 'jrs-grid',\n  templateUrl: './grid.component.html',\n  styleUrls: ['./grid.component.scss'],\n})\nexport class GridComponent {\n  @Input() columnDefs: ColDef[];\n  @Input() defaultColDef: ColDef = {\n    sortable: true,\n    filter: true,\n    flex: 1,\n    minWidth: 100,\n  };\n  @Input() data: any[];\n  @Input() height: UiSize = 'm';\n\n  private gridApi: GridApi;\n  private gridColumnApi!: ColumnApi;\n\n  rowData: any[];\n\n  onGridReady(params: GridReadyEvent) {\n    let columnIds: string[] = [];\n    this.columnDefs.forEach((item) => {\n      if (item.field) {\n        columnIds.push(item.field);\n      }\n    });\n\n    this.gridApi = params.api;\n    this.gridColumnApi = params.columnApi;\n    // this.rowData = this.data;\n    // this.gridApi.sizeColumnsToFit();\n    console.log(columnIds);\n    // this.gridColumnApi.autoSizeColumns(columnIds, true);\n  }\n}\n",
            "assetsDirs": [],
            "styleUrlsData": [
                {
                    "data": ".grid-wrapper {\r\n  &.xs {\r\n    height: 150px;\r\n  }\r\n  &.s {\r\n    height: 200px;\r\n  }\r\n  &.m {\r\n    height: 300px;\r\n  }\r\n  &.l {\r\n    height: 400px;\r\n  }\r\n  &.xl {\r\n    height: 500px;\r\n  }\r\n}\r\n",
                    "styleUrl": "./grid.component.scss"
                }
            ],
            "stylesData": "",
            "templateData": "<div class=\"grid-wrapper ag-theme-material\" [ngClass]=\"height\">\n  <ag-grid-angular\n    class=\"ag-theme-material\"\n    style=\"height: 100%\"\n    [columnDefs]=\"columnDefs\"\n    [defaultColDef]=\"defaultColDef\"\n    [rowData]=\"data\"\n    [animateRows]=\"true\"\n    (gridReady)=\"onGridReady($event)\"\n  ></ag-grid-angular>\n</div>\n"
        },
        {
            "name": "HeaderComponent",
            "id": "component-HeaderComponent-cc2db33da6ea89984798dd1cd648743f40d766bf424d0282c218af9e38722d6861ab0cbb43b521fdf7b27c686cb69ca9163fb9effe652eeec14d87b5e4af93ce",
            "file": "src/app/modules/shared/components/organisms/header/header.component.ts",
            "encapsulation": [],
            "entryComponents": [],
            "inputs": [],
            "outputs": [],
            "providers": [],
            "selector": "jrs-header",
            "styleUrls": [
                "./header.component.scss"
            ],
            "styles": [],
            "templateUrl": [
                "./header.component.html"
            ],
            "viewProviders": [],
            "inputsClass": [
                {
                    "name": "headerTitle",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 10,
                    "type": "string | null",
                    "decorators": []
                },
                {
                    "name": "navLinks",
                    "defaultValue": "[]",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 12,
                    "type": "NavLinkObj[]",
                    "decorators": []
                }
            ],
            "outputsClass": [
                {
                    "name": "linkClickEvent",
                    "defaultValue": "new EventEmitter()",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 16,
                    "type": "EventEmitter<string>"
                },
                {
                    "name": "logoClickEvent",
                    "defaultValue": "new EventEmitter()",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 14,
                    "type": "EventEmitter<any>"
                }
            ],
            "propertiesClass": [],
            "methodsClass": [
                {
                    "name": "handleLinkClickEvent",
                    "args": [
                        {
                            "name": "event",
                            "type": "any",
                            "deprecated": false,
                            "deprecationMessage": ""
                        }
                    ],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 22,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "jsdoctags": [
                        {
                            "name": "event",
                            "type": "any",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                },
                {
                    "name": "handleLogoClickEvent",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 18,
                    "deprecated": false,
                    "deprecationMessage": ""
                }
            ],
            "deprecated": false,
            "deprecationMessage": "",
            "hostBindings": [],
            "hostListeners": [],
            "description": "",
            "rawdescription": "\n",
            "type": "component",
            "sourceCode": "import { Component, Input, Output, EventEmitter } from '@angular/core';\nimport { NavLinkObj } from '../../../interfaces/ui.interface';\n\n@Component({\n  selector: 'jrs-header',\n  templateUrl: './header.component.html',\n  styleUrls: ['./header.component.scss'],\n})\nexport class HeaderComponent {\n  @Input() headerTitle: string | null;\n\n  @Input() navLinks: NavLinkObj[] = [];\n\n  @Output() logoClickEvent: EventEmitter<any> = new EventEmitter();\n\n  @Output() linkClickEvent: EventEmitter<string> = new EventEmitter();\n\n  handleLogoClickEvent() {\n    this.logoClickEvent.emit();\n  }\n\n  handleLinkClickEvent(event: any) {\n    this.linkClickEvent.emit(event);\n  }\n}\n",
            "assetsDirs": [],
            "styleUrlsData": [
                {
                    "data": "",
                    "styleUrl": "./header.component.scss"
                }
            ],
            "stylesData": "",
            "templateData": "<header class=\"bg-primary-color h-20 flex items-center px-5\">\n  <div class=\"flex items-center grow\">\n    <jrs-logo\n      [color]=\"'white'\"\n      class=\"w-28 hover:cursor-pointer\"\n      (click)=\"handleLogoClickEvent()\"\n    ></jrs-logo>\n    <h1 class=\"text-white ml-5\">{{ headerTitle }}</h1>\n  </div>\n  <div class=\"flex justify-end content-evenly\">\n    <jrs-nav-link\n      *ngFor=\"let link of navLinks\"\n      [linkTo]=\"link.to\"\n      [linkText]=\"link.text\"\n      (linkClickEvent)=\"handleLinkClickEvent($event)\"\n      class=\"ml-4\"\n    ></jrs-nav-link>\n  </div>\n</header>\n"
        },
        {
            "name": "IconComponent",
            "id": "component-IconComponent-d33d6339a141f9d83984b515258b8ce6d71ec3ada96bb986206a2e5d77a9dce72f066d3f5e73d0a8e4091b326ee2b04e7cf7f6fe0e72a691bfd718c6d60626b5",
            "file": "src/app/modules/shared/components/atoms/icon/icon.component.ts",
            "encapsulation": [],
            "entryComponents": [],
            "inputs": [],
            "outputs": [],
            "providers": [],
            "selector": "jrs-icon",
            "styleUrls": [
                "./icon.component.scss"
            ],
            "styles": [],
            "templateUrl": [
                "./icon.component.html"
            ],
            "viewProviders": [],
            "inputsClass": [
                {
                    "name": "color",
                    "defaultValue": "'secondary'",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 15,
                    "type": "UiColor",
                    "decorators": []
                },
                {
                    "name": "iconName",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 11,
                    "type": "IconName",
                    "decorators": []
                },
                {
                    "name": "size",
                    "defaultValue": "'3x'",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 13,
                    "type": "UiIconSize",
                    "decorators": []
                }
            ],
            "outputsClass": [],
            "propertiesClass": [],
            "methodsClass": [
                {
                    "name": "setIconForDisplay",
                    "args": [],
                    "optional": false,
                    "returnType": "",
                    "typeParameters": [],
                    "line": 19,
                    "deprecated": false,
                    "deprecationMessage": ""
                }
            ],
            "deprecated": false,
            "deprecationMessage": "",
            "hostBindings": [],
            "hostListeners": [],
            "description": "",
            "rawdescription": "\n",
            "type": "component",
            "sourceCode": "import { Component, Input } from '@angular/core';\nimport { IconName, IconPrefix } from '@fortawesome/fontawesome-svg-core';\nimport { UiIconSize, UiColor } from '../../../types/ui.types';\n\n@Component({\n  selector: 'jrs-icon',\n  templateUrl: './icon.component.html',\n  styleUrls: ['./icon.component.scss'],\n})\nexport class IconComponent {\n  @Input() iconName: IconName;\n\n  @Input() size: UiIconSize = '3x';\n\n  @Input() color: UiColor = 'secondary';\n\n  constructor() {}\n\n  setIconForDisplay(): [IconPrefix, IconName] {\n    return ['fas', this.iconName];\n  }\n}\n",
            "assetsDirs": [],
            "styleUrlsData": [
                {
                    "data": "fa-icon {\r\n  &.white {\r\n    color: var(--white);\r\n  }\r\n  &.primary {\r\n    color: var(--primary-color);\r\n  }\r\n  &.secondary {\r\n    color: var(--secondary-color);\r\n  }\r\n}\r\n",
                    "styleUrl": "./icon.component.scss"
                }
            ],
            "stylesData": "",
            "constructorObj": {
                "name": "constructor",
                "description": "",
                "deprecated": false,
                "deprecationMessage": "",
                "args": [],
                "line": 15
            },
            "templateData": "<ng-container *ngIf=\"iconName\">\n  <fa-icon\n    [icon]=\"setIconForDisplay()\"\n    [size]=\"size\"\n    [ngClass]=\"color\"\n  ></fa-icon>\n</ng-container>\n"
        },
        {
            "name": "InputLabelComponent",
            "id": "component-InputLabelComponent-43e5c13b5a1075c6cb1193fae13b49b1a20706826d3e37de99759ee645c3fbbc7743190849fad137ec1d94ee599eead2b37c8b47f1e010b9f1c16e694ff94b0a",
            "file": "src/app/modules/shared/components/atoms/input-label/input-label.component.ts",
            "encapsulation": [],
            "entryComponents": [],
            "inputs": [],
            "outputs": [],
            "providers": [],
            "selector": "jrs-input-label",
            "styleUrls": [
                "./input-label.component.scss"
            ],
            "styles": [],
            "templateUrl": [
                "./input-label.component.html"
            ],
            "viewProviders": [],
            "inputsClass": [
                {
                    "name": "isRequired",
                    "defaultValue": "false",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 16,
                    "type": "boolean",
                    "decorators": []
                },
                {
                    "name": "labelId",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 10,
                    "type": "string",
                    "decorators": []
                },
                {
                    "name": "labelName",
                    "defaultValue": "''",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 12,
                    "type": "string",
                    "decorators": []
                },
                {
                    "name": "size",
                    "defaultValue": "'m'",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 14,
                    "type": "UiSize",
                    "decorators": []
                }
            ],
            "outputsClass": [],
            "propertiesClass": [],
            "methodsClass": [],
            "deprecated": false,
            "deprecationMessage": "",
            "hostBindings": [],
            "hostListeners": [],
            "description": "",
            "rawdescription": "\n",
            "type": "component",
            "sourceCode": "import { Component, Input } from '@angular/core';\nimport { UiSize } from '../../../types/ui.types';\n\n@Component({\n  selector: 'jrs-input-label',\n  templateUrl: './input-label.component.html',\n  styleUrls: ['./input-label.component.scss'],\n})\nexport class InputLabelComponent {\n  @Input() labelId: string;\n\n  @Input() labelName = '';\n\n  @Input() size: UiSize = 'm';\n\n  @Input() isRequired = false;\n}\n",
            "assetsDirs": [],
            "styleUrlsData": [
                {
                    "data": ".required {\r\n  color: var(--primary-color);\r\n  font-size: large;\r\n}\r\n",
                    "styleUrl": "./input-label.component.scss"
                }
            ],
            "stylesData": "",
            "templateData": "<label class=\"cursor-pointer\" [attr.for]=\"labelId\" [ngClass]=\"size\">\n  {{ labelName }}\n  <span *ngIf=\"isRequired\" class=\"required\">*</span>\n</label>\n"
        },
        {
            "name": "LinkComponent",
            "id": "component-LinkComponent-ef2510b73a2b99ddeeeaea0712718e5e58bc30612686be7d9fca6f8a73fee9fd5d17c718a74dc548160df1419b1bcc169ea6c53916bbc2b279ebc04290b93800",
            "file": "src/app/modules/shared/components/atoms/link/link.component.ts",
            "encapsulation": [],
            "entryComponents": [],
            "inputs": [],
            "outputs": [],
            "providers": [],
            "selector": "jrs-nav-link",
            "styleUrls": [
                "./link.component.scss"
            ],
            "styles": [],
            "templateUrl": [
                "./link.component.html"
            ],
            "viewProviders": [],
            "inputsClass": [
                {
                    "name": "linkText",
                    "defaultValue": "''",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 12,
                    "type": "string",
                    "decorators": []
                },
                {
                    "name": "linkTo",
                    "defaultValue": "''",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 10,
                    "type": "string",
                    "decorators": []
                },
                {
                    "name": "openInNewTab",
                    "defaultValue": "false",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 16,
                    "type": "boolean",
                    "decorators": []
                },
                {
                    "name": "size",
                    "defaultValue": "'m'",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 14,
                    "type": "UiSize",
                    "decorators": []
                }
            ],
            "outputsClass": [
                {
                    "name": "linkClickEvent",
                    "defaultValue": "new EventEmitter()",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 18,
                    "type": "EventEmitter<string>"
                }
            ],
            "propertiesClass": [],
            "methodsClass": [
                {
                    "name": "handleLinkClick",
                    "args": [
                        {
                            "name": "event",
                            "type": "Event",
                            "deprecated": false,
                            "deprecationMessage": ""
                        }
                    ],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 20,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "jsdoctags": [
                        {
                            "name": "event",
                            "type": "Event",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                }
            ],
            "deprecated": false,
            "deprecationMessage": "",
            "hostBindings": [],
            "hostListeners": [],
            "description": "",
            "rawdescription": "\n",
            "type": "component",
            "sourceCode": "import { Component, EventEmitter, Input, Output } from '@angular/core';\nimport { UiSize } from '../../../types/ui.types';\n\n@Component({\n  selector: 'jrs-nav-link',\n  templateUrl: './link.component.html',\n  styleUrls: ['./link.component.scss'],\n})\nexport class LinkComponent {\n  @Input() linkTo = '';\n\n  @Input() linkText = '';\n\n  @Input() size: UiSize = 'm';\n\n  @Input() openInNewTab = false;\n\n  @Output() linkClickEvent: EventEmitter<string> = new EventEmitter();\n\n  handleLinkClick(event: Event) {\n    this.linkClickEvent.emit(this.linkText);\n  }\n}\n",
            "assetsDirs": [],
            "styleUrlsData": [
                {
                    "data": "",
                    "styleUrl": "./link.component.scss"
                }
            ],
            "stylesData": "",
            "templateData": "<ng-container *ngIf=\"!linkTo.includes('http'); else out_side_link_template\">\n  <a\n    class=\"\n      text-white\n      uppercase\n      text-2xl\n      font-semibold\n      hover:underline\n      underline-offset-1\n    \"\n    (click)=\"handleLinkClick($event)\"\n    [ngClass]=\"size\"\n    [routerLink]=\"linkTo\"\n    [attr.target]=\"openInNewTab ? '_blank' : null\"\n  >\n    {{ linkText }}\n  </a>\n</ng-container>\n<ng-template #out_side_link_template>\n  <a\n    class=\"underline hover:text-info-color\"\n    [ngClass]=\"size\"\n    [attr.href]=\"linkTo\"\n    [attr.target]=\"openInNewTab ? '_blank' : null\"\n  >\n    {{ linkText }}</a\n  >\n</ng-template>\n"
        },
        {
            "name": "LoaderComponent",
            "id": "component-LoaderComponent-e1b31f803e0bb5409f3bbe399f62c89e5dd2879353ca216b6002da5a2f26019fee8aa24970c1eace1cebb53a565c5e386abbc248202d325a8fba9116df60491a",
            "file": "src/app/modules/shared/components/atoms/loader/loader.component.ts",
            "encapsulation": [],
            "entryComponents": [],
            "inputs": [],
            "outputs": [],
            "providers": [],
            "selector": "jrs-loader",
            "styleUrls": [
                "./loader.component.scss"
            ],
            "styles": [],
            "templateUrl": [
                "./loader.component.html"
            ],
            "viewProviders": [],
            "inputsClass": [
                {
                    "name": "size",
                    "defaultValue": "'l'",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 10,
                    "type": "UiSize",
                    "decorators": []
                }
            ],
            "outputsClass": [],
            "propertiesClass": [],
            "methodsClass": [],
            "deprecated": false,
            "deprecationMessage": "",
            "hostBindings": [],
            "hostListeners": [],
            "description": "",
            "rawdescription": "\n",
            "type": "component",
            "sourceCode": "import { Component, Input } from '@angular/core';\nimport { UiSize } from '@modules/shared/types/ui.types';\n\n@Component({\n  selector: 'jrs-loader',\n  templateUrl: './loader.component.html',\n  styleUrls: ['./loader.component.scss'],\n})\nexport class LoaderComponent {\n  @Input() size: UiSize = 'l';\n}\n",
            "assetsDirs": [],
            "styleUrlsData": [
                {
                    "data": ".loading-animation {\r\n  &.xs {\r\n    width: 25px;\r\n  }\r\n  &.s {\r\n    width: 50px;\r\n  }\r\n  &.m {\r\n    width: 75px;\r\n  }\r\n  &.l {\r\n    width: 100px;\r\n  }\r\n  &.xl {\r\n    width: 125px;\r\n  }\r\n}\r\n",
                    "styleUrl": "./loader.component.scss"
                }
            ],
            "stylesData": "",
            "templateData": "<div class=\"w-full\">\n  <img\n    class=\"loading-animation m-auto\"\n    [ngClass]=\"size\"\n    src=\"assets/loading.gif\"\n    alt=\"loading\"\n  />\n</div>\n"
        },
        {
            "name": "LogoComponent",
            "id": "component-LogoComponent-634d4c34ec6878d43be2b642a279c2fb23000a5451784f718522e1dee603a84835f81065ee3419ffc4f97bea2905c14cee013b67a10d9e7c7b6f4b8c4f6d798b",
            "file": "src/app/modules/shared/components/atoms/logo/logo.component.ts",
            "encapsulation": [],
            "entryComponents": [],
            "inputs": [],
            "outputs": [],
            "providers": [],
            "selector": "jrs-logo",
            "styleUrls": [
                "./logo.component.scss"
            ],
            "styles": [],
            "templateUrl": [
                "./logo.component.html"
            ],
            "viewProviders": [],
            "inputsClass": [
                {
                    "name": "color",
                    "defaultValue": "'black'",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 9,
                    "type": "\"black\" | \"white\"",
                    "decorators": []
                },
                {
                    "name": "size",
                    "defaultValue": "'large'",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 11,
                    "type": "\"small\" | \"large\"",
                    "decorators": []
                }
            ],
            "outputsClass": [],
            "propertiesClass": [],
            "methodsClass": [],
            "deprecated": false,
            "deprecationMessage": "",
            "hostBindings": [],
            "hostListeners": [],
            "description": "",
            "rawdescription": "\n",
            "type": "component",
            "sourceCode": "import { Component, Input } from '@angular/core';\n\n@Component({\n  selector: 'jrs-logo',\n  templateUrl: './logo.component.html',\n  styleUrls: ['./logo.component.scss'],\n})\nexport class LogoComponent {\n  @Input() color: 'black' | 'white' = 'black';\n\n  @Input() size: 'small' | 'large' = 'large';\n}\n",
            "assetsDirs": [],
            "styleUrlsData": [
                {
                    "data": ".logo {\r\n  &.black {\r\n    filter: brightness(0%);\r\n  }\r\n  &.large {\r\n    width: 200px;\r\n  }\r\n  &.small {\r\n    width: 100px;\r\n  }\r\n}\r\n",
                    "styleUrl": "./logo.component.scss"
                }
            ],
            "stylesData": "",
            "templateData": "<img\r\n  class=\"logo\"\r\n  src=\"assets/logo/logo.svg\"\r\n  alt=\"logo\"\r\n  [ngClass]=\"[color, size]\"\r\n/>\r\n"
        },
        {
            "name": "ProjectComponent",
            "id": "component-ProjectComponent-455f73cff86537e93524f79116050f310a23c8b1fc028f44562c4367751c966962c1267d37be47da2ddce70bee509c3f702b3970e4d7320c456c38b4fa3903d6",
            "file": "src/app/modules/features/project/page/project.component.ts",
            "encapsulation": [],
            "entryComponents": [],
            "inputs": [],
            "outputs": [],
            "providers": [],
            "selector": "jrs-page",
            "styleUrls": [
                "./project.component.scss"
            ],
            "styles": [],
            "templateUrl": [
                "./project.component.html"
            ],
            "viewProviders": [],
            "inputsClass": [],
            "outputsClass": [],
            "propertiesClass": [
                {
                    "name": "projects$",
                    "defaultValue": "this.store.pipe(select(getProjects))",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "optional": false,
                    "description": "",
                    "line": 17
                },
                {
                    "name": "projectsLoading$",
                    "defaultValue": "this.store.pipe(select(getProjectLoadingStatus))",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "optional": false,
                    "description": "",
                    "line": 19
                }
            ],
            "methodsClass": [
                {
                    "name": "loadProjects",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 33,
                    "deprecated": false,
                    "deprecationMessage": ""
                },
                {
                    "name": "ngOnInit",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 23,
                    "deprecated": false,
                    "deprecationMessage": ""
                }
            ],
            "deprecated": false,
            "deprecationMessage": "",
            "hostBindings": [],
            "hostListeners": [],
            "description": "",
            "rawdescription": "\n",
            "type": "component",
            "sourceCode": "import { Component, OnInit } from '@angular/core';\nimport { select, Store } from '@ngrx/store';\nimport { take } from 'rxjs';\nimport { ProjectPageActions } from './../state/actions/index';\nimport { State } from '../state/project.reducer';\nimport {\n  getProjectLoadingStatus,\n  getProjects,\n} from '../state/project.selectors';\n\n@Component({\n  selector: 'jrs-page',\n  templateUrl: './project.component.html',\n  styleUrls: ['./project.component.scss'],\n})\nexport class ProjectComponent implements OnInit {\n  projects$ = this.store.pipe(select(getProjects));\n\n  projectsLoading$ = this.store.pipe(select(getProjectLoadingStatus));\n\n  constructor(private store: Store<State>) {}\n\n  ngOnInit(): void {\n    this.store.pipe(select(getProjects), take(1)).subscribe({\n      next: (items) => {\n        if (items.length < 1) {\n          this.loadProjects();\n        }\n      },\n    });\n  }\n\n  loadProjects(): void {\n    this.store.dispatch(ProjectPageActions.loadProjects());\n  }\n}\n",
            "assetsDirs": [],
            "styleUrlsData": [
                {
                    "data": "",
                    "styleUrl": "./project.component.scss"
                }
            ],
            "stylesData": "",
            "constructorObj": {
                "name": "constructor",
                "description": "",
                "deprecated": false,
                "deprecationMessage": "",
                "args": [
                    {
                        "name": "store",
                        "type": "Store<State>",
                        "deprecated": false,
                        "deprecationMessage": ""
                    }
                ],
                "line": 19,
                "jsdoctags": [
                    {
                        "name": "store",
                        "type": "Store<State>",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "tagName": {
                            "text": "param"
                        }
                    }
                ]
            },
            "implements": [
                "OnInit"
            ],
            "templateData": "<ng-container *ngIf=\"projectsLoading$ | async; else display_grid\">\n  <jrs-loader></jrs-loader>\n</ng-container>\n\n<ng-template #display_grid>\n  <jrs-project-grid [projects]=\"projects$ | async\"></jrs-project-grid>\n</ng-template>\n"
        },
        {
            "name": "ProjectGridComponent",
            "id": "component-ProjectGridComponent-b798f08387753a6f315fd105558f5e5a8177b96b962cca6960acf214af2ebc5875c98c91e95d5ce07992ca6bc019cd8b353e31b2ecde796d61746c0609051ee6",
            "file": "src/app/modules/features/project/components/project-grid/project-grid.component.ts",
            "changeDetection": "ChangeDetectionStrategy.OnPush",
            "encapsulation": [],
            "entryComponents": [],
            "inputs": [],
            "outputs": [],
            "providers": [],
            "selector": "jrs-project-grid",
            "styleUrls": [
                "./project-grid.component.scss"
            ],
            "styles": [],
            "templateUrl": [
                "./project-grid.component.html"
            ],
            "viewProviders": [],
            "inputsClass": [
                {
                    "name": "projects",
                    "defaultValue": "[]",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 17,
                    "type": "Project[] | null",
                    "decorators": []
                }
            ],
            "outputsClass": [],
            "propertiesClass": [
                {
                    "name": "columnDefs",
                    "defaultValue": "[\n    {\n      field: 'projectCodeName',\n    },\n    {\n      field: 'overallStatus',\n    },\n    {\n      field: 'startDate',\n    },\n    {\n      field: 'projectedEndDate',\n    },\n    {\n      field: 'percentageComplete',\n    },\n  ]",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "ColDef[]",
                    "optional": false,
                    "description": "",
                    "line": 19
                }
            ],
            "methodsClass": [
                {
                    "name": "ngOnInit",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 39,
                    "deprecated": false,
                    "deprecationMessage": ""
                }
            ],
            "deprecated": false,
            "deprecationMessage": "",
            "hostBindings": [],
            "hostListeners": [],
            "description": "",
            "rawdescription": "\n",
            "type": "component",
            "sourceCode": "import {\n  ChangeDetectionStrategy,\n  Component,\n  Input,\n  OnInit,\n} from '@angular/core';\nimport { ColDef } from 'ag-grid-community';\nimport { Project } from 'src/app/modules/shared/interfaces/project.interface';\n\n@Component({\n  selector: 'jrs-project-grid',\n  templateUrl: './project-grid.component.html',\n  styleUrls: ['./project-grid.component.scss'],\n  changeDetection: ChangeDetectionStrategy.OnPush,\n})\nexport class ProjectGridComponent implements OnInit {\n  @Input() projects: Project[] | null = [];\n\n  columnDefs: ColDef[] = [\n    {\n      field: 'projectCodeName',\n    },\n    {\n      field: 'overallStatus',\n    },\n    {\n      field: 'startDate',\n    },\n    {\n      field: 'projectedEndDate',\n    },\n    {\n      field: 'percentageComplete',\n    },\n  ];\n\n  constructor() {}\n\n  ngOnInit(): void {}\n}\n",
            "assetsDirs": [],
            "styleUrlsData": [
                {
                    "data": "",
                    "styleUrl": "./project-grid.component.scss"
                }
            ],
            "stylesData": "",
            "constructorObj": {
                "name": "constructor",
                "description": "",
                "deprecated": false,
                "deprecationMessage": "",
                "args": [],
                "line": 35
            },
            "implements": [
                "OnInit"
            ],
            "templateData": "<ng-container *ngIf=\"projects\">\n  <jrs-grid height=\"xl\" [columnDefs]=\"columnDefs\" [data]=\"projects\"></jrs-grid>\n</ng-container>\n"
        },
        {
            "name": "TextareaInputComponent",
            "id": "component-TextareaInputComponent-7613666009a73d75fe30e28c544aeb31befb8caed8035fe24b90ccd129dd43d544bb2f2ad10634637ecba04653650916bf769f5648a9bb03a7c35d191decc9d1",
            "file": "src/app/modules/shared/components/atoms/textarea-input/textarea-input.component.ts",
            "encapsulation": [],
            "entryComponents": [],
            "inputs": [],
            "outputs": [],
            "providers": [],
            "selector": "jrs-textarea-input",
            "styleUrls": [
                "./textarea-input.component.scss"
            ],
            "styles": [],
            "templateUrl": [
                "./textarea-input.component.html"
            ],
            "viewProviders": [],
            "inputsClass": [
                {
                    "name": "inputId",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 10,
                    "type": "string",
                    "decorators": []
                },
                {
                    "name": "inputValue",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 12,
                    "type": "string",
                    "decorators": []
                },
                {
                    "name": "isRequired",
                    "defaultValue": "false",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 18,
                    "type": "boolean",
                    "decorators": []
                },
                {
                    "name": "placeholder",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 14,
                    "type": "string",
                    "decorators": []
                },
                {
                    "name": "size",
                    "defaultValue": "'m'",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 16,
                    "type": "UiSize",
                    "decorators": []
                }
            ],
            "outputsClass": [
                {
                    "name": "blurOutputEvent",
                    "defaultValue": "new EventEmitter()",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 20,
                    "type": "EventEmitter<string>"
                },
                {
                    "name": "focusOutputEvent",
                    "defaultValue": "new EventEmitter()",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 22,
                    "type": "EventEmitter<string>"
                },
                {
                    "name": "keyupOutputEvent",
                    "defaultValue": "new EventEmitter()",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 24,
                    "type": "EventEmitter<string>"
                }
            ],
            "propertiesClass": [],
            "methodsClass": [
                {
                    "name": "handleBlurOutputEvent",
                    "args": [
                        {
                            "name": "event",
                            "type": "string",
                            "deprecated": false,
                            "deprecationMessage": ""
                        }
                    ],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 26,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "jsdoctags": [
                        {
                            "name": "event",
                            "type": "string",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                },
                {
                    "name": "handleFocusOutputEvent",
                    "args": [
                        {
                            "name": "event",
                            "type": "string",
                            "deprecated": false,
                            "deprecationMessage": ""
                        }
                    ],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 30,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "jsdoctags": [
                        {
                            "name": "event",
                            "type": "string",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                },
                {
                    "name": "handleKeyupOutputEvent",
                    "args": [
                        {
                            "name": "event",
                            "type": "string",
                            "deprecated": false,
                            "deprecationMessage": ""
                        }
                    ],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 34,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "jsdoctags": [
                        {
                            "name": "event",
                            "type": "string",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                }
            ],
            "deprecated": false,
            "deprecationMessage": "",
            "hostBindings": [],
            "hostListeners": [],
            "description": "",
            "rawdescription": "\n",
            "type": "component",
            "sourceCode": "import { Component, Input, Output, EventEmitter } from '@angular/core';\nimport { UiSize } from '../../../types/ui.types';\n\n@Component({\n  selector: 'jrs-textarea-input',\n  templateUrl: './textarea-input.component.html',\n  styleUrls: ['./textarea-input.component.scss'],\n})\nexport class TextareaInputComponent {\n  @Input() inputId: string;\n\n  @Input() inputValue: string;\n\n  @Input() placeholder: string;\n\n  @Input() size: UiSize = 'm';\n\n  @Input() isRequired = false;\n\n  @Output() blurOutputEvent: EventEmitter<string> = new EventEmitter();\n\n  @Output() focusOutputEvent: EventEmitter<string> = new EventEmitter();\n\n  @Output() keyupOutputEvent: EventEmitter<string> = new EventEmitter();\n\n  handleBlurOutputEvent(event: string) {\n    this.blurOutputEvent.emit(event);\n  }\n\n  handleFocusOutputEvent(event: string) {\n    this.focusOutputEvent.emit(event);\n  }\n\n  handleKeyupOutputEvent(event: string) {\n    this.keyupOutputEvent.emit(event);\n  }\n}\n",
            "assetsDirs": [],
            "styleUrlsData": [
                {
                    "data": "",
                    "styleUrl": "./textarea-input.component.scss"
                }
            ],
            "stylesData": "",
            "templateData": "<textarea\n  class=\"\n    py-2\n    px-3\n    border border-darker-grey-color\n    rounded-md\n    outline-2 outline-secondary-color\n  \"\n  autocomplete=\"off\"\n  [(ngModel)]=\"inputValue\"\n  [attr.id]=\"inputId\"\n  [attr.placeholder]=\"placeholder\"\n  [ngClass]=\"size\"\n  [attr.required]=\"isRequired\"\n  (blur)=\"handleBlurOutputEvent(inputValue)\"\n  (focus)=\"handleFocusOutputEvent(inputValue)\"\n  (keyup)=\"handleKeyupOutputEvent(inputValue)\"\n></textarea>\n"
        },
        {
            "name": "TextInputComponent",
            "id": "component-TextInputComponent-ed2dce67430cf6084168b22276b98a504dcedb7be96935ca9d29975ee9b57b01e3c19934b5a16e2ba1cccf43881535541ec8d24da68aa161444d4acba93e2b97",
            "file": "src/app/modules/shared/components/atoms/text-input/text-input.component.ts",
            "encapsulation": [],
            "entryComponents": [],
            "inputs": [],
            "outputs": [],
            "providers": [],
            "selector": "jrs-text-input",
            "styleUrls": [
                "./text-input.component.scss"
            ],
            "styles": [],
            "templateUrl": [
                "./text-input.component.html"
            ],
            "viewProviders": [],
            "inputsClass": [
                {
                    "name": "inputId",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 10,
                    "type": "string",
                    "decorators": []
                },
                {
                    "name": "inputType",
                    "defaultValue": "'text'",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 16,
                    "type": "UiTextInputType",
                    "decorators": []
                },
                {
                    "name": "inputValue",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 12,
                    "type": "string",
                    "decorators": []
                },
                {
                    "name": "isRequired",
                    "defaultValue": "false",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 20,
                    "type": "boolean",
                    "decorators": []
                },
                {
                    "name": "placeholder",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 14,
                    "type": "string",
                    "decorators": []
                },
                {
                    "name": "size",
                    "defaultValue": "'m'",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 18,
                    "type": "UiSize",
                    "decorators": []
                }
            ],
            "outputsClass": [
                {
                    "name": "blurOutputEvent",
                    "defaultValue": "new EventEmitter()",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 22,
                    "type": "EventEmitter<string>"
                },
                {
                    "name": "focusOutputEvent",
                    "defaultValue": "new EventEmitter()",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 24,
                    "type": "EventEmitter<string>"
                },
                {
                    "name": "keyupOutputEvent",
                    "defaultValue": "new EventEmitter()",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 26,
                    "type": "EventEmitter<string>"
                }
            ],
            "propertiesClass": [],
            "methodsClass": [
                {
                    "name": "handleBlurOutputEvent",
                    "args": [
                        {
                            "name": "event",
                            "type": "string",
                            "deprecated": false,
                            "deprecationMessage": ""
                        }
                    ],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 28,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "jsdoctags": [
                        {
                            "name": "event",
                            "type": "string",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                },
                {
                    "name": "handleFocusOutputEvent",
                    "args": [
                        {
                            "name": "event",
                            "type": "string",
                            "deprecated": false,
                            "deprecationMessage": ""
                        }
                    ],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 32,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "jsdoctags": [
                        {
                            "name": "event",
                            "type": "string",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                },
                {
                    "name": "handleKeyupOutputEvent",
                    "args": [
                        {
                            "name": "event",
                            "type": "string",
                            "deprecated": false,
                            "deprecationMessage": ""
                        }
                    ],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 36,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "jsdoctags": [
                        {
                            "name": "event",
                            "type": "string",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                }
            ],
            "deprecated": false,
            "deprecationMessage": "",
            "hostBindings": [],
            "hostListeners": [],
            "description": "",
            "rawdescription": "\n",
            "type": "component",
            "sourceCode": "import { Component, EventEmitter, Input, Output } from '@angular/core';\nimport { UiSize, UiTextInputType } from '../../../types/ui.types';\n\n@Component({\n  selector: 'jrs-text-input',\n  templateUrl: './text-input.component.html',\n  styleUrls: ['./text-input.component.scss'],\n})\nexport class TextInputComponent {\n  @Input() inputId: string;\n\n  @Input() inputValue: string;\n\n  @Input() placeholder: string;\n\n  @Input() inputType: UiTextInputType = 'text';\n\n  @Input() size: UiSize = 'm';\n\n  @Input() isRequired = false;\n\n  @Output() blurOutputEvent: EventEmitter<string> = new EventEmitter();\n\n  @Output() focusOutputEvent: EventEmitter<string> = new EventEmitter();\n\n  @Output() keyupOutputEvent: EventEmitter<string> = new EventEmitter();\n\n  handleBlurOutputEvent(event: string) {\n    this.blurOutputEvent.emit(event);\n  }\n\n  handleFocusOutputEvent(event: string) {\n    this.focusOutputEvent.emit(event);\n  }\n\n  handleKeyupOutputEvent(event: string) {\n    this.keyupOutputEvent.emit(event);\n  }\n}\n",
            "assetsDirs": [],
            "styleUrlsData": [
                {
                    "data": "",
                    "styleUrl": "./text-input.component.scss"
                }
            ],
            "stylesData": "",
            "templateData": "<input\n  class=\"\n    py-2\n    px-3\n    border border-darker-grey-color\n    rounded-md\n    outline-2 outline-secondary-color\n  \"\n  autocomplete=\"off\"\n  [(ngModel)]=\"inputValue\"\n  [attr.id]=\"inputId\"\n  [attr.placeholder]=\"placeholder\"\n  [attr.type]=\"inputType\"\n  [ngClass]=\"size\"\n  [attr.required]=\"isRequired\"\n  (blur)=\"handleBlurOutputEvent(inputValue)\"\n  (focus)=\"handleFocusOutputEvent(inputValue)\"\n  (keyup)=\"handleKeyupOutputEvent(inputValue)\"\n/>\n"
        }
    ],
    "modules": [
        {
            "name": "AppModule",
            "id": "module-AppModule-8a68e17ba88cb7c065c6b53d5393af9e8eeb959034c936110b2e82e6d898ed2f2f46d13ee8333f0b66e2732f1abd3dbb45f589fd17ce25a95f175471d04e390d",
            "description": "",
            "deprecationMessage": "",
            "deprecated": false,
            "file": "src/app/app.module.ts",
            "methods": [],
            "sourceCode": "import { NgModule } from '@angular/core';\nimport { BrowserModule } from '@angular/platform-browser';\nimport { RouterModule } from '@angular/router';\nimport { HttpClientModule } from '@angular/common/http';\n\nimport { AppRoutingModule } from './app-routing.module';\nimport { AppComponent } from './app.component';\nimport { SharedModule } from '@modules/shared/shared.module';\nimport { StoreModule } from '@ngrx/store';\nimport { StoreDevtoolsModule } from '@ngrx/store-devtools';\nimport { environment } from '../environments/environment';\nimport { appReducer } from './state/app.reducer';\nimport { EffectsModule } from '@ngrx/effects';\n\n@NgModule({\n  declarations: [AppComponent],\n  imports: [\n    BrowserModule,\n    AppRoutingModule,\n    HttpClientModule,\n    SharedModule,\n    RouterModule.forRoot([]),\n    StoreModule.forRoot({ appState: appReducer }),\n    StoreDevtoolsModule.instrument({\n      maxAge: 50,\n      logOnly: environment.production,\n    }),\n    EffectsModule.forRoot([]),\n  ],\n  exports: [StoreModule],\n  providers: [],\n  bootstrap: [AppComponent],\n})\nexport class AppModule {}\n",
            "children": [
                {
                    "type": "providers",
                    "elements": []
                },
                {
                    "type": "declarations",
                    "elements": [
                        {
                            "name": "AppComponent"
                        }
                    ]
                },
                {
                    "type": "imports",
                    "elements": [
                        {
                            "name": "AppRoutingModule"
                        },
                        {
                            "name": "SharedModule"
                        }
                    ]
                },
                {
                    "type": "exports",
                    "elements": []
                },
                {
                    "type": "bootstrap",
                    "elements": [
                        {
                            "name": "AppComponent"
                        }
                    ]
                },
                {
                    "type": "classes",
                    "elements": []
                }
            ]
        },
        {
            "name": "AppRoutingModule",
            "id": "module-AppRoutingModule-3a8f8865e974d880e0dde76d6f5861be5af16b8de43368d071dc335f1242c5498ca5a68c0b4ce2af5d771f8f743eba60faa11b08ab09137025f78cdba3ce5185",
            "description": "",
            "deprecationMessage": "",
            "deprecated": false,
            "file": "src/app/app-routing.module.ts",
            "methods": [],
            "sourceCode": "import { NgModule } from '@angular/core';\nimport { RouterModule, Routes } from '@angular/router';\n\nconst routes: Routes = [\n  {\n    path: 'projects',\n    loadChildren: () =>\n      \"import('./modules/features/project/project.module').then(\\\n        (m) => m.ProjectModule\\\n      )\",\n  },\n];\n\n@NgModule({\n  imports: [RouterModule.forRoot(routes)],\n  exports: [RouterModule],\n})\nexport class AppRoutingModule {}\n",
            "children": [
                {
                    "type": "providers",
                    "elements": []
                },
                {
                    "type": "declarations",
                    "elements": []
                },
                {
                    "type": "imports",
                    "elements": []
                },
                {
                    "type": "exports",
                    "elements": []
                },
                {
                    "type": "bootstrap",
                    "elements": []
                },
                {
                    "type": "classes",
                    "elements": []
                }
            ]
        },
        {
            "name": "CompanyModule",
            "id": "module-CompanyModule-6b47c7540f247f357d4fec7e7a260d58a21043e9d850f9a9730b826bdf50c3741f25bac9393fd28b42c511bc5c8b6e69da9e376a5417714bc4e1a51dfce8359f",
            "description": "",
            "deprecationMessage": "",
            "deprecated": false,
            "file": "src/app/modules/features/company/company.module.ts",
            "methods": [],
            "sourceCode": "import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\n\n\n\n@NgModule({\n  declarations: [],\n  imports: [\n    CommonModule\n  ]\n})\nexport class CompanyModule { }\n",
            "children": [
                {
                    "type": "providers",
                    "elements": []
                },
                {
                    "type": "declarations",
                    "elements": []
                },
                {
                    "type": "imports",
                    "elements": []
                },
                {
                    "type": "exports",
                    "elements": []
                },
                {
                    "type": "bootstrap",
                    "elements": []
                },
                {
                    "type": "classes",
                    "elements": []
                }
            ]
        },
        {
            "name": "ConsultantsModule",
            "id": "module-ConsultantsModule-b667b94730c713c5d18982257fa612f09ad17835573b13e4e58897afaeb3da407f92b978555d964a1923e3393b08e6931886b5cc4b6ec59dfa9b079a7f6a64e9",
            "description": "",
            "deprecationMessage": "",
            "deprecated": false,
            "file": "src/app/modules/features/consultants/consultants.module.ts",
            "methods": [],
            "sourceCode": "import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\n\n\n\n@NgModule({\n  declarations: [],\n  imports: [\n    CommonModule\n  ]\n})\nexport class ConsultantsModule { }\n",
            "children": [
                {
                    "type": "providers",
                    "elements": []
                },
                {
                    "type": "declarations",
                    "elements": []
                },
                {
                    "type": "imports",
                    "elements": []
                },
                {
                    "type": "exports",
                    "elements": []
                },
                {
                    "type": "bootstrap",
                    "elements": []
                },
                {
                    "type": "classes",
                    "elements": []
                }
            ]
        },
        {
            "name": "ContactsModule",
            "id": "module-ContactsModule-5779411d1ce5dc91c467bfcc7b9161ee92980617e0fa72f0a9cdf7c80b01fe3ffb986b506efc05a508d4c57e3bab1902dd7b92218dd3744072cd34016ea1fbd0",
            "description": "",
            "deprecationMessage": "",
            "deprecated": false,
            "file": "src/app/modules/features/contacts/contacts.module.ts",
            "methods": [],
            "sourceCode": "import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\n\n\n\n@NgModule({\n  declarations: [],\n  imports: [\n    CommonModule\n  ]\n})\nexport class ContactsModule { }\n",
            "children": [
                {
                    "type": "providers",
                    "elements": []
                },
                {
                    "type": "declarations",
                    "elements": []
                },
                {
                    "type": "imports",
                    "elements": []
                },
                {
                    "type": "exports",
                    "elements": []
                },
                {
                    "type": "bootstrap",
                    "elements": []
                },
                {
                    "type": "classes",
                    "elements": []
                }
            ]
        },
        {
            "name": "CoreModule",
            "id": "module-CoreModule-b28211cf6cc667233939898adca1bbe03f751bc4673b74a66b3ddaf417f0207cdde9374b03419adb539d7a504fe23e52d48a7b0171eecf8b16849ee644bdb7a3",
            "description": "",
            "deprecationMessage": "",
            "deprecated": false,
            "file": "src/app/modules/core/core.module.ts",
            "methods": [],
            "sourceCode": "import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\n\n\n\n@NgModule({\n  declarations: [],\n  imports: [\n    CommonModule\n  ]\n})\nexport class CoreModule { }\n",
            "children": [
                {
                    "type": "providers",
                    "elements": []
                },
                {
                    "type": "declarations",
                    "elements": []
                },
                {
                    "type": "imports",
                    "elements": []
                },
                {
                    "type": "exports",
                    "elements": []
                },
                {
                    "type": "bootstrap",
                    "elements": []
                },
                {
                    "type": "classes",
                    "elements": []
                }
            ]
        },
        {
            "name": "ProjectModule",
            "id": "module-ProjectModule-75a6eb78af9079c00ab00519e148302bfaefe4836b8ec22b00a9f46c2e55bab6a7e8ff012db05a0004e1bd05e29e434d187215db23960bff30144c572c0de601",
            "description": "",
            "deprecationMessage": "",
            "deprecated": false,
            "file": "src/app/modules/features/project/project.module.ts",
            "methods": [],
            "sourceCode": "import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { ProjectComponent } from './page/project.component';\nimport { SharedModule } from '../../shared/shared.module';\nimport { ProjectRoutingModule } from './project-routing.module';\nimport { StoreModule } from '@ngrx/store';\nimport { ProjectGridComponent } from './components/project-grid/project-grid.component';\nimport { ProjectFeatureKey, projectReducer } from './state/project.reducer';\nimport { EffectsModule } from '@ngrx/effects';\nimport { ProjectEffects } from './state/project.effects';\nimport { RouterModule } from '@angular/router';\n\n@NgModule({\n  declarations: [ProjectComponent, ProjectGridComponent],\n  imports: [\n    CommonModule,\n    SharedModule,\n    RouterModule,\n    ProjectRoutingModule,\n    StoreModule.forFeature(ProjectFeatureKey, projectReducer),\n    EffectsModule.forFeature([ProjectEffects]),\n  ],\n})\nexport class ProjectModule {}\n",
            "children": [
                {
                    "type": "providers",
                    "elements": []
                },
                {
                    "type": "declarations",
                    "elements": [
                        {
                            "name": "ProjectComponent"
                        },
                        {
                            "name": "ProjectGridComponent"
                        }
                    ]
                },
                {
                    "type": "imports",
                    "elements": [
                        {
                            "name": "ProjectRoutingModule"
                        },
                        {
                            "name": "SharedModule"
                        }
                    ]
                },
                {
                    "type": "exports",
                    "elements": []
                },
                {
                    "type": "bootstrap",
                    "elements": []
                },
                {
                    "type": "classes",
                    "elements": []
                }
            ]
        },
        {
            "name": "ProjectRoutingModule",
            "id": "module-ProjectRoutingModule-c9f46276edee00431b62816e465ab6b55c7c350161df1c23e70182f7e101026ba00b08785aa22aa515ff85e72ea604ec0026bbb3db0bc56f3b80b782c0a022aa",
            "description": "",
            "deprecationMessage": "",
            "deprecated": false,
            "file": "src/app/modules/features/project/project-routing.module.ts",
            "methods": [],
            "sourceCode": "import { NgModule } from '@angular/core';\r\nimport { RouterModule, Routes } from '@angular/router';\r\nimport { ProjectComponent } from './page/project.component';\r\n\r\nconst routes: Routes = [\r\n  {\r\n    path: '',\r\n    pathMatch: 'full',\r\n    component: ProjectComponent,\r\n    // children: [\r\n    //   { path: '', component: ProjectPageComponent, pathMatch: 'full' },\r\n    // ],\r\n  },\r\n];\r\n\r\n@NgModule({\r\n  imports: [RouterModule.forChild(routes)],\r\n  exports: [RouterModule],\r\n})\r\nexport class ProjectRoutingModule {}\r\n",
            "children": [
                {
                    "type": "providers",
                    "elements": []
                },
                {
                    "type": "declarations",
                    "elements": []
                },
                {
                    "type": "imports",
                    "elements": []
                },
                {
                    "type": "exports",
                    "elements": []
                },
                {
                    "type": "bootstrap",
                    "elements": []
                },
                {
                    "type": "classes",
                    "elements": []
                }
            ]
        },
        {
            "name": "SharedModule",
            "id": "module-SharedModule-030e39a163a81556f00c02154054f936bc77f2e1be5105d00ac51684c1e4ccd83964b03c2e87212cc817e79ff046d08c2b46347a7ddd0f5297df43937595a61a",
            "description": "",
            "deprecationMessage": "",
            "deprecated": false,
            "file": "src/app/modules/shared/shared.module.ts",
            "methods": [],
            "sourceCode": "import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { ButtonComponent } from './components/atoms/button/button.component';\nimport {\n  FaIconLibrary,\n  FontAwesomeModule,\n} from '@fortawesome/angular-fontawesome';\nimport {\n  faCircleCheck,\n  faCircleExclamation,\n  faFolder,\n} from '@fortawesome/free-solid-svg-icons';\nimport { IconComponent } from './components/atoms/icon/icon.component';\nimport { InputLabelComponent } from './components/atoms/input-label/input-label.component';\nimport { TextInputComponent } from './components/atoms/text-input/text-input.component';\nimport { FormsModule } from '@angular/forms';\nimport { TextareaInputComponent } from './components/atoms/textarea-input/textarea-input.component';\nimport { LinkComponent } from './components/atoms/link/link.component';\nimport { RouterModule } from '@angular/router';\nimport { LogoComponent } from './components/atoms/logo/logo.component';\nimport { DropdownInputComponent } from './components/atoms/dropdown-input/dropdown-input.component';\nimport { HeaderComponent } from './components/organisms/header/header.component';\nimport { LoaderComponent } from './components/atoms/loader/loader.component';\nimport { GridComponent } from './components/atoms/grid/grid.component';\nimport { AgGridModule } from 'ag-grid-angular';\n\n@NgModule({\n  declarations: [\n    // Atoms\n    ButtonComponent,\n    IconComponent,\n    InputLabelComponent,\n    TextInputComponent,\n    TextareaInputComponent,\n    LinkComponent,\n    LogoComponent,\n    DropdownInputComponent,\n    LoaderComponent,\n    GridComponent,\n    // Organisms\n    HeaderComponent,\n  ],\n  imports: [\n    CommonModule,\n    FontAwesomeModule,\n    FormsModule,\n    RouterModule,\n    AgGridModule,\n  ],\n  exports: [\n    // Atoms\n    ButtonComponent,\n    IconComponent,\n    InputLabelComponent,\n    TextInputComponent,\n    TextareaInputComponent,\n    LinkComponent,\n    LogoComponent,\n    DropdownInputComponent,\n    LoaderComponent,\n    GridComponent,\n    // Organisms\n    HeaderComponent,\n  ],\n})\nexport class SharedModule {\n  constructor(library: FaIconLibrary) {\n    library.addIcons(faCircleCheck, faCircleExclamation, faFolder);\n  }\n}\n",
            "children": [
                {
                    "type": "providers",
                    "elements": []
                },
                {
                    "type": "declarations",
                    "elements": [
                        {
                            "name": "ButtonComponent"
                        },
                        {
                            "name": "DropdownInputComponent"
                        },
                        {
                            "name": "GridComponent"
                        },
                        {
                            "name": "HeaderComponent"
                        },
                        {
                            "name": "IconComponent"
                        },
                        {
                            "name": "InputLabelComponent"
                        },
                        {
                            "name": "LinkComponent"
                        },
                        {
                            "name": "LoaderComponent"
                        },
                        {
                            "name": "LogoComponent"
                        },
                        {
                            "name": "TextInputComponent"
                        },
                        {
                            "name": "TextareaInputComponent"
                        }
                    ]
                },
                {
                    "type": "imports",
                    "elements": []
                },
                {
                    "type": "exports",
                    "elements": [
                        {
                            "name": "ButtonComponent"
                        },
                        {
                            "name": "DropdownInputComponent"
                        },
                        {
                            "name": "GridComponent"
                        },
                        {
                            "name": "HeaderComponent"
                        },
                        {
                            "name": "IconComponent"
                        },
                        {
                            "name": "InputLabelComponent"
                        },
                        {
                            "name": "LinkComponent"
                        },
                        {
                            "name": "LoaderComponent"
                        },
                        {
                            "name": "LogoComponent"
                        },
                        {
                            "name": "TextInputComponent"
                        },
                        {
                            "name": "TextareaInputComponent"
                        }
                    ]
                },
                {
                    "type": "bootstrap",
                    "elements": []
                },
                {
                    "type": "classes",
                    "elements": []
                }
            ]
        }
    ],
    "miscellaneous": {
        "variables": [
            {
                "name": "appReducer",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/app/state/app.reducer.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "",
                "defaultValue": "createReducer(\r\n  initialState,\r\n  on(setPageTitle, (state, action) => {\r\n    return {\r\n      ...state,\r\n      pageTitle: action.pageTitle,\r\n    };\r\n  })\r\n)"
            },
            {
                "name": "context",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/test.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "",
                "defaultValue": "require.context('./', true, /\\.spec\\.ts$/)"
            },
            {
                "name": "DropdownInput",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/app/modules/shared/components/atoms/dropdown-input/dropdown-input.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "",
                "defaultValue": "Template.bind({})"
            },
            {
                "name": "environment",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/environments/environment.prod.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "object",
                "defaultValue": "{\n  production: true\n}"
            },
            {
                "name": "environment",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/environments/environment.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "object",
                "defaultValue": "{\n  production: false\n}"
            },
            {
                "name": "getProjectFeatureState",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/app/modules/features/project/state/project.selectors.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "",
                "defaultValue": "createFeatureSelector<ProjectState>('projects')"
            },
            {
                "name": "getProjectLoadingErrorMsg",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/app/modules/features/project/state/project.selectors.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "",
                "defaultValue": "createSelector(\r\n  getProjectFeatureState,\r\n  (state) => state.error\r\n)"
            },
            {
                "name": "getProjectLoadingStatus",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/app/modules/features/project/state/project.selectors.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "",
                "defaultValue": "createSelector(\r\n  getProjectFeatureState,\r\n  (state) => state.isLoading\r\n)"
            },
            {
                "name": "getProjects",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/app/modules/features/project/state/project.selectors.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "",
                "defaultValue": "createSelector(\r\n  getProjectFeatureState,\r\n  (state) => state.projects\r\n)"
            },
            {
                "name": "Grid",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/app/modules/shared/components/atoms/grid/grid.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "",
                "defaultValue": "Template.bind({})"
            },
            {
                "name": "Header",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/app/modules/shared/components/organisms/header/header.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "",
                "defaultValue": "Template.bind({})"
            },
            {
                "name": "Icon",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/app/modules/shared/components/atoms/icon/icon.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "",
                "defaultValue": "Template.bind({})"
            },
            {
                "name": "initialState",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/app/state/app.reducer.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "object",
                "defaultValue": "{\r\n  pageTitle: 'WELCOME',\r\n}"
            },
            {
                "name": "initialState",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/app/modules/features/project/state/project.reducer.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "ProjectState",
                "defaultValue": "{\r\n  projects: [],\r\n  isLoading: true,\r\n  error: '',\r\n}"
            },
            {
                "name": "InputLabel",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/app/modules/shared/components/atoms/input-label/input-label.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "",
                "defaultValue": "Template.bind({})"
            },
            {
                "name": "Link",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/app/modules/shared/components/atoms/link/link.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "",
                "defaultValue": "Template.bind({})"
            },
            {
                "name": "Loader",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/app/modules/shared/components/atoms/loader/loader.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "",
                "defaultValue": "Template.bind({})"
            },
            {
                "name": "loadProjectError",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/app/modules/features/project/state/actions/project-api.actions.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "",
                "defaultValue": "createAction(\r\n  '[Project] Load Project Error',\r\n  props<{ error: string }>()\r\n)"
            },
            {
                "name": "loadProjects",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/app/modules/features/project/state/actions/project-page.actions.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "",
                "defaultValue": "createAction('[Project] Load Projects')"
            },
            {
                "name": "loadProjectsSuccess",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/app/modules/features/project/state/actions/project-api.actions.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "",
                "defaultValue": "createAction(\r\n  '[Project] Load Project Success',\r\n  props<{ projects: Project[] }>()\r\n)"
            },
            {
                "name": "Logo",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/app/modules/shared/components/atoms/logo/logo.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "",
                "defaultValue": "Template.bind({})"
            },
            {
                "name": "Primary",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/app/modules/shared/components/atoms/button/button.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "",
                "defaultValue": "Template.bind({})"
            },
            {
                "name": "ProjectFeatureKey",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/app/modules/features/project/state/project.reducer.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "string",
                "defaultValue": "'projects'"
            },
            {
                "name": "projectReducer",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/app/modules/features/project/state/project.reducer.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "",
                "defaultValue": "createReducer(\r\n  initialState,\r\n  on(ProjectApiActions.loadProjectsSuccess, (state, action): ProjectState => {\r\n    return {\r\n      ...state,\r\n      projects: action.projects,\r\n      error: '',\r\n      isLoading: false,\r\n    };\r\n  }),\r\n  on(ProjectApiActions.loadProjectError, (state, action): ProjectState => {\r\n    return {\r\n      ...state,\r\n      projects: [],\r\n      isLoading: false,\r\n      error: action.error,\r\n    };\r\n  })\r\n)"
            },
            {
                "name": "require",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/test.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "literal type"
            },
            {
                "name": "Secondary",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/app/modules/shared/components/atoms/button/button.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "",
                "defaultValue": "Template.bind({})"
            },
            {
                "name": "selectAppState",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/app/state/app.selectors.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "",
                "defaultValue": "createFeatureSelector<State>('appState')"
            },
            {
                "name": "selectPageTitle",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/app/state/app.selectors.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "",
                "defaultValue": "createSelector(\r\n  selectAppState,\r\n  (state: State) => state.pageTitle\r\n)"
            },
            {
                "name": "setPageTitle",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/app/state/app.actions.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "",
                "defaultValue": "createAction(\n  '[App] Set Page Title',\n  props<{ pageTitle: string }>()\n)"
            },
            {
                "name": "Template",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/app/modules/shared/components/atoms/dropdown-input/dropdown-input.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "Story<DropdownInputComponent>",
                "defaultValue": "(\r\n  args: DropdownInputComponent\r\n) => ({\r\n  props: args,\r\n})"
            },
            {
                "name": "Template",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/app/modules/shared/components/atoms/grid/grid.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "Story<GridComponent>",
                "defaultValue": "(args: GridComponent) => ({\r\n  props: args,\r\n})"
            },
            {
                "name": "Template",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/app/modules/shared/components/atoms/button/button.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "Story<ButtonComponent>",
                "defaultValue": "(args: ButtonComponent) => ({\r\n  props: args,\r\n})"
            },
            {
                "name": "Template",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/app/modules/shared/components/atoms/icon/icon.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "Story<IconComponent>",
                "defaultValue": "(args: IconComponent) => ({\r\n  props: args,\r\n})"
            },
            {
                "name": "Template",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/app/modules/shared/components/atoms/link/link.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "Story<LinkComponent>",
                "defaultValue": "(args: LinkComponent) => ({\r\n  props: args,\r\n})"
            },
            {
                "name": "Template",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/app/modules/shared/components/atoms/input-label/input-label.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "Story<InputLabelComponent>",
                "defaultValue": "(args: InputLabelComponent) => ({\r\n  props: args,\r\n})"
            },
            {
                "name": "Template",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/app/modules/shared/components/atoms/loader/loader.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "Story<LoaderComponent>",
                "defaultValue": "(args: LoaderComponent) => ({\r\n  props: args,\r\n})"
            },
            {
                "name": "Template",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/app/modules/shared/components/atoms/logo/logo.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "Story<LogoComponent>",
                "defaultValue": "(args: LogoComponent) => ({\r\n  props: args,\r\n})"
            },
            {
                "name": "Template",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/app/modules/shared/components/atoms/text-input/text-input.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "Story<TextInputComponent>",
                "defaultValue": "(args: TextInputComponent) => ({\r\n  props: args,\r\n})"
            },
            {
                "name": "Template",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/app/modules/shared/components/atoms/textarea-input/textarea-input.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "Story<TextareaInputComponent>",
                "defaultValue": "(\r\n  args: TextareaInputComponent\r\n) => ({\r\n  props: args,\r\n})"
            },
            {
                "name": "Template",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/app/modules/shared/components/organisms/header/header.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "Story<HeaderComponent>",
                "defaultValue": "(args: HeaderComponent) => ({\r\n  props: args,\r\n})"
            },
            {
                "name": "TextareaInput",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/app/modules/shared/components/atoms/textarea-input/textarea-input.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "",
                "defaultValue": "Template.bind({})"
            },
            {
                "name": "TextInput",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/app/modules/shared/components/atoms/text-input/text-input.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "",
                "defaultValue": "Template.bind({})"
            }
        ],
        "functions": [],
        "typealiases": [
            {
                "name": "UiColor",
                "ctype": "miscellaneous",
                "subtype": "typealias",
                "rawtype": "\"white\" | \"primary\" | \"secondary\"",
                "file": "src/app/modules/shared/types/ui.types.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "description": "",
                "kind": 186
            },
            {
                "name": "UiIconSize",
                "ctype": "miscellaneous",
                "subtype": "typealias",
                "rawtype": "\"1x\" | \"2x\" | \"3x\" | \"4x\"",
                "file": "src/app/modules/shared/types/ui.types.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "description": "",
                "kind": 186
            },
            {
                "name": "UiSize",
                "ctype": "miscellaneous",
                "subtype": "typealias",
                "rawtype": "\"xs\" | \"s\" | \"m\" | \"l\" | \"xl\"",
                "file": "src/app/modules/shared/types/ui.types.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "description": "",
                "kind": 186
            },
            {
                "name": "UiTextInputType",
                "ctype": "miscellaneous",
                "subtype": "typealias",
                "rawtype": "\"date\" | \"email\" | \"number\" | \"tel\" | \"text\" | \"url\"",
                "file": "src/app/modules/shared/types/ui.types.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "description": "",
                "kind": 186
            }
        ],
        "enumerations": [],
        "groupedVariables": {
            "src/app/state/app.reducer.ts": [
                {
                    "name": "appReducer",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/app/state/app.reducer.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "defaultValue": "createReducer(\r\n  initialState,\r\n  on(setPageTitle, (state, action) => {\r\n    return {\r\n      ...state,\r\n      pageTitle: action.pageTitle,\r\n    };\r\n  })\r\n)"
                },
                {
                    "name": "initialState",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/app/state/app.reducer.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "object",
                    "defaultValue": "{\r\n  pageTitle: 'WELCOME',\r\n}"
                }
            ],
            "src/test.ts": [
                {
                    "name": "context",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/test.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "defaultValue": "require.context('./', true, /\\.spec\\.ts$/)"
                },
                {
                    "name": "require",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/test.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "literal type"
                }
            ],
            "src/app/modules/shared/components/atoms/dropdown-input/dropdown-input.stories.ts": [
                {
                    "name": "DropdownInput",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/app/modules/shared/components/atoms/dropdown-input/dropdown-input.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "defaultValue": "Template.bind({})"
                },
                {
                    "name": "Template",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/app/modules/shared/components/atoms/dropdown-input/dropdown-input.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "Story<DropdownInputComponent>",
                    "defaultValue": "(\r\n  args: DropdownInputComponent\r\n) => ({\r\n  props: args,\r\n})"
                }
            ],
            "src/environments/environment.prod.ts": [
                {
                    "name": "environment",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/environments/environment.prod.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "object",
                    "defaultValue": "{\n  production: true\n}"
                }
            ],
            "src/environments/environment.ts": [
                {
                    "name": "environment",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/environments/environment.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "object",
                    "defaultValue": "{\n  production: false\n}"
                }
            ],
            "src/app/modules/features/project/state/project.selectors.ts": [
                {
                    "name": "getProjectFeatureState",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/app/modules/features/project/state/project.selectors.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "defaultValue": "createFeatureSelector<ProjectState>('projects')"
                },
                {
                    "name": "getProjectLoadingErrorMsg",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/app/modules/features/project/state/project.selectors.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "defaultValue": "createSelector(\r\n  getProjectFeatureState,\r\n  (state) => state.error\r\n)"
                },
                {
                    "name": "getProjectLoadingStatus",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/app/modules/features/project/state/project.selectors.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "defaultValue": "createSelector(\r\n  getProjectFeatureState,\r\n  (state) => state.isLoading\r\n)"
                },
                {
                    "name": "getProjects",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/app/modules/features/project/state/project.selectors.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "defaultValue": "createSelector(\r\n  getProjectFeatureState,\r\n  (state) => state.projects\r\n)"
                }
            ],
            "src/app/modules/shared/components/atoms/grid/grid.stories.ts": [
                {
                    "name": "Grid",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/app/modules/shared/components/atoms/grid/grid.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "defaultValue": "Template.bind({})"
                },
                {
                    "name": "Template",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/app/modules/shared/components/atoms/grid/grid.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "Story<GridComponent>",
                    "defaultValue": "(args: GridComponent) => ({\r\n  props: args,\r\n})"
                }
            ],
            "src/app/modules/shared/components/organisms/header/header.stories.ts": [
                {
                    "name": "Header",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/app/modules/shared/components/organisms/header/header.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "defaultValue": "Template.bind({})"
                },
                {
                    "name": "Template",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/app/modules/shared/components/organisms/header/header.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "Story<HeaderComponent>",
                    "defaultValue": "(args: HeaderComponent) => ({\r\n  props: args,\r\n})"
                }
            ],
            "src/app/modules/shared/components/atoms/icon/icon.stories.ts": [
                {
                    "name": "Icon",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/app/modules/shared/components/atoms/icon/icon.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "defaultValue": "Template.bind({})"
                },
                {
                    "name": "Template",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/app/modules/shared/components/atoms/icon/icon.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "Story<IconComponent>",
                    "defaultValue": "(args: IconComponent) => ({\r\n  props: args,\r\n})"
                }
            ],
            "src/app/modules/features/project/state/project.reducer.ts": [
                {
                    "name": "initialState",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/app/modules/features/project/state/project.reducer.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "ProjectState",
                    "defaultValue": "{\r\n  projects: [],\r\n  isLoading: true,\r\n  error: '',\r\n}"
                },
                {
                    "name": "ProjectFeatureKey",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/app/modules/features/project/state/project.reducer.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "string",
                    "defaultValue": "'projects'"
                },
                {
                    "name": "projectReducer",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/app/modules/features/project/state/project.reducer.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "defaultValue": "createReducer(\r\n  initialState,\r\n  on(ProjectApiActions.loadProjectsSuccess, (state, action): ProjectState => {\r\n    return {\r\n      ...state,\r\n      projects: action.projects,\r\n      error: '',\r\n      isLoading: false,\r\n    };\r\n  }),\r\n  on(ProjectApiActions.loadProjectError, (state, action): ProjectState => {\r\n    return {\r\n      ...state,\r\n      projects: [],\r\n      isLoading: false,\r\n      error: action.error,\r\n    };\r\n  })\r\n)"
                }
            ],
            "src/app/modules/shared/components/atoms/input-label/input-label.stories.ts": [
                {
                    "name": "InputLabel",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/app/modules/shared/components/atoms/input-label/input-label.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "defaultValue": "Template.bind({})"
                },
                {
                    "name": "Template",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/app/modules/shared/components/atoms/input-label/input-label.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "Story<InputLabelComponent>",
                    "defaultValue": "(args: InputLabelComponent) => ({\r\n  props: args,\r\n})"
                }
            ],
            "src/app/modules/shared/components/atoms/link/link.stories.ts": [
                {
                    "name": "Link",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/app/modules/shared/components/atoms/link/link.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "defaultValue": "Template.bind({})"
                },
                {
                    "name": "Template",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/app/modules/shared/components/atoms/link/link.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "Story<LinkComponent>",
                    "defaultValue": "(args: LinkComponent) => ({\r\n  props: args,\r\n})"
                }
            ],
            "src/app/modules/shared/components/atoms/loader/loader.stories.ts": [
                {
                    "name": "Loader",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/app/modules/shared/components/atoms/loader/loader.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "defaultValue": "Template.bind({})"
                },
                {
                    "name": "Template",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/app/modules/shared/components/atoms/loader/loader.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "Story<LoaderComponent>",
                    "defaultValue": "(args: LoaderComponent) => ({\r\n  props: args,\r\n})"
                }
            ],
            "src/app/modules/features/project/state/actions/project-api.actions.ts": [
                {
                    "name": "loadProjectError",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/app/modules/features/project/state/actions/project-api.actions.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "defaultValue": "createAction(\r\n  '[Project] Load Project Error',\r\n  props<{ error: string }>()\r\n)"
                },
                {
                    "name": "loadProjectsSuccess",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/app/modules/features/project/state/actions/project-api.actions.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "defaultValue": "createAction(\r\n  '[Project] Load Project Success',\r\n  props<{ projects: Project[] }>()\r\n)"
                }
            ],
            "src/app/modules/features/project/state/actions/project-page.actions.ts": [
                {
                    "name": "loadProjects",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/app/modules/features/project/state/actions/project-page.actions.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "defaultValue": "createAction('[Project] Load Projects')"
                }
            ],
            "src/app/modules/shared/components/atoms/logo/logo.stories.ts": [
                {
                    "name": "Logo",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/app/modules/shared/components/atoms/logo/logo.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "defaultValue": "Template.bind({})"
                },
                {
                    "name": "Template",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/app/modules/shared/components/atoms/logo/logo.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "Story<LogoComponent>",
                    "defaultValue": "(args: LogoComponent) => ({\r\n  props: args,\r\n})"
                }
            ],
            "src/app/modules/shared/components/atoms/button/button.stories.ts": [
                {
                    "name": "Primary",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/app/modules/shared/components/atoms/button/button.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "defaultValue": "Template.bind({})"
                },
                {
                    "name": "Secondary",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/app/modules/shared/components/atoms/button/button.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "defaultValue": "Template.bind({})"
                },
                {
                    "name": "Template",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/app/modules/shared/components/atoms/button/button.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "Story<ButtonComponent>",
                    "defaultValue": "(args: ButtonComponent) => ({\r\n  props: args,\r\n})"
                }
            ],
            "src/app/state/app.selectors.ts": [
                {
                    "name": "selectAppState",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/app/state/app.selectors.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "defaultValue": "createFeatureSelector<State>('appState')"
                },
                {
                    "name": "selectPageTitle",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/app/state/app.selectors.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "defaultValue": "createSelector(\r\n  selectAppState,\r\n  (state: State) => state.pageTitle\r\n)"
                }
            ],
            "src/app/state/app.actions.ts": [
                {
                    "name": "setPageTitle",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/app/state/app.actions.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "defaultValue": "createAction(\n  '[App] Set Page Title',\n  props<{ pageTitle: string }>()\n)"
                }
            ],
            "src/app/modules/shared/components/atoms/text-input/text-input.stories.ts": [
                {
                    "name": "Template",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/app/modules/shared/components/atoms/text-input/text-input.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "Story<TextInputComponent>",
                    "defaultValue": "(args: TextInputComponent) => ({\r\n  props: args,\r\n})"
                },
                {
                    "name": "TextInput",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/app/modules/shared/components/atoms/text-input/text-input.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "defaultValue": "Template.bind({})"
                }
            ],
            "src/app/modules/shared/components/atoms/textarea-input/textarea-input.stories.ts": [
                {
                    "name": "Template",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/app/modules/shared/components/atoms/textarea-input/textarea-input.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "Story<TextareaInputComponent>",
                    "defaultValue": "(\r\n  args: TextareaInputComponent\r\n) => ({\r\n  props: args,\r\n})"
                },
                {
                    "name": "TextareaInput",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/app/modules/shared/components/atoms/textarea-input/textarea-input.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "defaultValue": "Template.bind({})"
                }
            ]
        },
        "groupedFunctions": {},
        "groupedEnumerations": {},
        "groupedTypeAliases": {
            "src/app/modules/shared/types/ui.types.ts": [
                {
                    "name": "UiColor",
                    "ctype": "miscellaneous",
                    "subtype": "typealias",
                    "rawtype": "\"white\" | \"primary\" | \"secondary\"",
                    "file": "src/app/modules/shared/types/ui.types.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "description": "",
                    "kind": 186
                },
                {
                    "name": "UiIconSize",
                    "ctype": "miscellaneous",
                    "subtype": "typealias",
                    "rawtype": "\"1x\" | \"2x\" | \"3x\" | \"4x\"",
                    "file": "src/app/modules/shared/types/ui.types.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "description": "",
                    "kind": 186
                },
                {
                    "name": "UiSize",
                    "ctype": "miscellaneous",
                    "subtype": "typealias",
                    "rawtype": "\"xs\" | \"s\" | \"m\" | \"l\" | \"xl\"",
                    "file": "src/app/modules/shared/types/ui.types.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "description": "",
                    "kind": 186
                },
                {
                    "name": "UiTextInputType",
                    "ctype": "miscellaneous",
                    "subtype": "typealias",
                    "rawtype": "\"date\" | \"email\" | \"number\" | \"tel\" | \"text\" | \"url\"",
                    "file": "src/app/modules/shared/types/ui.types.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "description": "",
                    "kind": 186
                }
            ]
        }
    },
    "routes": {
        "name": "<root>",
        "kind": "module",
        "className": "AppModule",
        "children": [
            {
                "name": "routes",
                "filename": "src/app/app-routing.module.ts",
                "module": "AppRoutingModule",
                "children": [
                    {
                        "path": "projects",
                        "loadChildren": "./modules/features/project/project.module#ProjectModule",
                        "children": [
                            {
                                "kind": "module",
                                "children": [
                                    {
                                        "name": "routes",
                                        "filename": "src/app/modules/features/project/project-routing.module.ts",
                                        "module": "ProjectRoutingModule",
                                        "children": [
                                            {
                                                "path": "",
                                                "pathMatch": "full",
                                                "component": "ProjectComponent"
                                            }
                                        ],
                                        "kind": "module"
                                    }
                                ],
                                "module": "ProjectModule"
                            }
                        ]
                    }
                ],
                "kind": "module"
            }
        ]
    },
    "coverage": {
        "count": 0,
        "status": "low",
        "files": [
            {
                "filePath": "src/app/app.component.ts",
                "type": "component",
                "linktype": "component",
                "name": "AppComponent",
                "coveragePercent": 0,
                "coverageCount": "0/6",
                "status": "low"
            },
            {
                "filePath": "src/app/modules/core/services/project.service.ts",
                "type": "injectable",
                "linktype": "injectable",
                "name": "ProjectService",
                "coveragePercent": 0,
                "coverageCount": "0/5",
                "status": "low"
            },
            {
                "filePath": "src/app/modules/core/utilities/date.util.ts",
                "type": "class",
                "linktype": "classe",
                "name": "DateUtility",
                "coveragePercent": 0,
                "coverageCount": "0/2",
                "status": "low"
            },
            {
                "filePath": "src/app/modules/features/project/components/project-grid/project-grid.component.ts",
                "type": "component",
                "linktype": "component",
                "name": "ProjectGridComponent",
                "coveragePercent": 0,
                "coverageCount": "0/5",
                "status": "low"
            },
            {
                "filePath": "src/app/modules/features/project/page/project.component.ts",
                "type": "component",
                "linktype": "component",
                "name": "ProjectComponent",
                "coveragePercent": 0,
                "coverageCount": "0/6",
                "status": "low"
            },
            {
                "filePath": "src/app/modules/features/project/state/actions/project-api.actions.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "loadProjectError",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/app/modules/features/project/state/actions/project-api.actions.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "loadProjectsSuccess",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/app/modules/features/project/state/actions/project-page.actions.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "loadProjects",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/app/modules/features/project/state/project.effects.ts",
                "type": "injectable",
                "linktype": "injectable",
                "name": "ProjectEffects",
                "coveragePercent": 0,
                "coverageCount": "0/3",
                "status": "low"
            },
            {
                "filePath": "src/app/modules/features/project/state/project.reducer.ts",
                "type": "interface",
                "linktype": "interface",
                "name": "ProjectState",
                "coveragePercent": 0,
                "coverageCount": "0/4",
                "status": "low"
            },
            {
                "filePath": "src/app/modules/features/project/state/project.reducer.ts",
                "type": "interface",
                "linktype": "interface",
                "name": "State",
                "coveragePercent": 0,
                "coverageCount": "0/2",
                "status": "low"
            },
            {
                "filePath": "src/app/modules/features/project/state/project.reducer.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "initialState",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/app/modules/features/project/state/project.reducer.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "ProjectFeatureKey",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/app/modules/features/project/state/project.reducer.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "projectReducer",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/app/modules/features/project/state/project.selectors.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "getProjectFeatureState",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/app/modules/features/project/state/project.selectors.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "getProjectLoadingErrorMsg",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/app/modules/features/project/state/project.selectors.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "getProjectLoadingStatus",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/app/modules/features/project/state/project.selectors.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "getProjects",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/app/modules/shared/components/atoms/button/button.component.ts",
                "type": "component",
                "linktype": "component",
                "name": "ButtonComponent",
                "coveragePercent": 0,
                "coverageCount": "0/6",
                "status": "low"
            },
            {
                "filePath": "src/app/modules/shared/components/atoms/button/button.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "Primary",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/app/modules/shared/components/atoms/button/button.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "Secondary",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/app/modules/shared/components/atoms/button/button.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "Template",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/app/modules/shared/components/atoms/dropdown-input/dropdown-input.component.ts",
                "type": "component",
                "linktype": "component",
                "name": "DropdownInputComponent",
                "coveragePercent": 0,
                "coverageCount": "0/10",
                "status": "low"
            },
            {
                "filePath": "src/app/modules/shared/components/atoms/dropdown-input/dropdown-input.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "DropdownInput",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/app/modules/shared/components/atoms/dropdown-input/dropdown-input.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "Template",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/app/modules/shared/components/atoms/grid/grid.component.ts",
                "type": "component",
                "linktype": "component",
                "name": "GridComponent",
                "coveragePercent": 0,
                "coverageCount": "0/9",
                "status": "low"
            },
            {
                "filePath": "src/app/modules/shared/components/atoms/grid/grid.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "Grid",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/app/modules/shared/components/atoms/grid/grid.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "Template",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/app/modules/shared/components/atoms/icon/icon.component.ts",
                "type": "component",
                "linktype": "component",
                "name": "IconComponent",
                "coveragePercent": 0,
                "coverageCount": "0/6",
                "status": "low"
            },
            {
                "filePath": "src/app/modules/shared/components/atoms/icon/icon.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "Icon",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/app/modules/shared/components/atoms/icon/icon.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "Template",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/app/modules/shared/components/atoms/input-label/input-label.component.ts",
                "type": "component",
                "linktype": "component",
                "name": "InputLabelComponent",
                "coveragePercent": 0,
                "coverageCount": "0/5",
                "status": "low"
            },
            {
                "filePath": "src/app/modules/shared/components/atoms/input-label/input-label.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "InputLabel",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/app/modules/shared/components/atoms/input-label/input-label.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "Template",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/app/modules/shared/components/atoms/link/link.component.ts",
                "type": "component",
                "linktype": "component",
                "name": "LinkComponent",
                "coveragePercent": 0,
                "coverageCount": "0/7",
                "status": "low"
            },
            {
                "filePath": "src/app/modules/shared/components/atoms/link/link.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "Link",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/app/modules/shared/components/atoms/link/link.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "Template",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/app/modules/shared/components/atoms/loader/loader.component.ts",
                "type": "component",
                "linktype": "component",
                "name": "LoaderComponent",
                "coveragePercent": 0,
                "coverageCount": "0/2",
                "status": "low"
            },
            {
                "filePath": "src/app/modules/shared/components/atoms/loader/loader.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "Loader",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/app/modules/shared/components/atoms/loader/loader.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "Template",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/app/modules/shared/components/atoms/logo/logo.component.ts",
                "type": "component",
                "linktype": "component",
                "name": "LogoComponent",
                "coveragePercent": 0,
                "coverageCount": "0/3",
                "status": "low"
            },
            {
                "filePath": "src/app/modules/shared/components/atoms/logo/logo.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "Logo",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/app/modules/shared/components/atoms/logo/logo.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "Template",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/app/modules/shared/components/atoms/text-input/text-input.component.ts",
                "type": "component",
                "linktype": "component",
                "name": "TextInputComponent",
                "coveragePercent": 0,
                "coverageCount": "0/13",
                "status": "low"
            },
            {
                "filePath": "src/app/modules/shared/components/atoms/text-input/text-input.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "Template",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/app/modules/shared/components/atoms/text-input/text-input.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "TextInput",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/app/modules/shared/components/atoms/textarea-input/textarea-input.component.ts",
                "type": "component",
                "linktype": "component",
                "name": "TextareaInputComponent",
                "coveragePercent": 0,
                "coverageCount": "0/12",
                "status": "low"
            },
            {
                "filePath": "src/app/modules/shared/components/atoms/textarea-input/textarea-input.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "Template",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/app/modules/shared/components/atoms/textarea-input/textarea-input.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "TextareaInput",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/app/modules/shared/components/organisms/header/header.component.ts",
                "type": "component",
                "linktype": "component",
                "name": "HeaderComponent",
                "coveragePercent": 0,
                "coverageCount": "0/7",
                "status": "low"
            },
            {
                "filePath": "src/app/modules/shared/components/organisms/header/header.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "Header",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/app/modules/shared/components/organisms/header/header.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "Template",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/app/modules/shared/interfaces/company.interface.ts",
                "type": "interface",
                "linktype": "interface",
                "name": "Company",
                "coveragePercent": 0,
                "coverageCount": "0/7",
                "status": "low"
            },
            {
                "filePath": "src/app/modules/shared/interfaces/consultant.interface.ts",
                "type": "interface",
                "linktype": "interface",
                "name": "Consultant",
                "coveragePercent": 0,
                "coverageCount": "0/9",
                "status": "low"
            },
            {
                "filePath": "src/app/modules/shared/interfaces/contact.interface.ts",
                "type": "interface",
                "linktype": "interface",
                "name": "Contact",
                "coveragePercent": 0,
                "coverageCount": "0/8",
                "status": "low"
            },
            {
                "filePath": "src/app/modules/shared/interfaces/project.interface.ts",
                "type": "interface",
                "linktype": "interface",
                "name": "Project",
                "coveragePercent": 0,
                "coverageCount": "0/9",
                "status": "low"
            },
            {
                "filePath": "src/app/modules/shared/interfaces/role.interface.ts",
                "type": "interface",
                "linktype": "interface",
                "name": "Role",
                "coveragePercent": 0,
                "coverageCount": "0/3",
                "status": "low"
            },
            {
                "filePath": "src/app/modules/shared/interfaces/ui.interface.ts",
                "type": "interface",
                "linktype": "interface",
                "name": "Dropdown",
                "coveragePercent": 0,
                "coverageCount": "0/4",
                "status": "low"
            },
            {
                "filePath": "src/app/modules/shared/interfaces/ui.interface.ts",
                "type": "interface",
                "linktype": "interface",
                "name": "NavLinkObj",
                "coveragePercent": 0,
                "coverageCount": "0/3",
                "status": "low"
            },
            {
                "filePath": "src/app/state/app.actions.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "setPageTitle",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/app/state/app.reducer.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "appReducer",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/app/state/app.reducer.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "initialState",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/app/state/app.selectors.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "selectAppState",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/app/state/app.selectors.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "selectPageTitle",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/app/state/app.state.ts",
                "type": "interface",
                "linktype": "interface",
                "name": "State",
                "coveragePercent": 0,
                "coverageCount": "0/2",
                "status": "low"
            },
            {
                "filePath": "src/environments/environment.prod.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "environment",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/environments/environment.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "environment",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/test.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "context",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/test.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "require",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            }
        ]
    }
}